# PySNMP SMI module. Autogenerated from smidump -f python CISCO-UNIFIED-COMPUTING-STORAGE-MIB
# by libsmi2pysnmp-0.1.3 at Wed Apr  8 22:57:26 2015,
# Python version (2, 6, 6, 'final', 0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ciscoMgmt, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
( CiscoAlarmSeverity, CiscoInetAddressMask, CiscoNetworkAddress, TimeIntervalSec, Unsigned64, ) = mibBuilder.importSymbols("CISCO-TC", "CiscoAlarmSeverity", "CiscoInetAddressMask", "CiscoNetworkAddress", "TimeIntervalSec", "Unsigned64")
( CucsManagedObjectDn, CucsManagedObjectId, ciscoUnifiedComputingMIBObjects, ) = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-MIB", "CucsManagedObjectDn", "CucsManagedObjectId", "ciscoUnifiedComputingMIBObjects")
( CucsAaaConfigState, CucsConditionRemoteInvRslt, CucsEquipmentOperability, CucsEquipmentPowerState, CucsEquipmentPresence, CucsEquipmentSensorThresholdStatus, CucsFabricZoningState, CucsFsmCompletion, CucsFsmFlags, CucsFsmFsmStageStatus, CucsFsmLifecycle, CucsPolicyPolicyOwner, CucsStorageAccessType, CucsStorageActualWriteType, CucsStorageBatteryType, CucsStorageBbuStatus, CucsStorageBootableType, CucsStorageCacheType, CucsStorageConfiguration, CucsStorageConfiguredWriteType, CucsStorageConnectionProtocol, CucsStorageControllerFaultMonitoring, CucsStorageControllerId, CucsStorageControllerStatus, CucsStorageControllerType, CucsStorageDisklessAction, CucsStorageEpAccess, CucsStorageEtherIfVlanType, CucsStorageFFCardHealth, CucsStorageFFCardMode, CucsStorageFFCardState, CucsStorageFFCardSync, CucsStorageFFCardWriteEnable, CucsStorageFFControllerHealth, CucsStorageFFControllerState, CucsStorageFFDriveRemovable, CucsStorageFFDriveState, CucsStorageFFDriveType, CucsStorageFFDriveVisible, CucsStorageFFHasError, CucsStorageFFRAIDHealth, CucsStorageFFRAIDState, CucsStorageFFRWType, CucsStorageFFRaidSyncSupport, CucsStorageFFSlotENUM, CucsStorageFFType, CucsStorageFcZoningType, CucsStorageFileSystemStatus, CucsStorageFlexFlashControllerFsmCurrentFsm, CucsStorageFlexFlashControllerFsmStageName, CucsStorageFlexFlashControllerFsmTaskFlags, CucsStorageFlexFlashControllerFsmTaskItem, CucsStorageFlexFlashControllerId, CucsStorageIOType, CucsStorageIniGroupOperProtocol, CucsStorageIniGroupOwner, CucsStorageIniGroupProtocol, CucsStorageKeyType, CucsStorageLearnCycleRequested, CucsStorageLearnMode, CucsStorageLinkSpeed, CucsStorageLocalDiskConfigFlexFlashRAIDReportingState, CucsStorageLocalDiskConfigFlexFlashState, CucsStorageLocalDiskMode, CucsStorageLocalDiskPartitionType, CucsStorageLunType, CucsStorageOperState, CucsStorageOperatingModeType, CucsStorageOperationRequestType, CucsStorageOperationState, CucsStorageOperationStateType, CucsStorageOperationType, CucsStoragePDriveStatus, CucsStoragePowerState, CucsStorageProtocol, CucsStorageRaidBatteryOperabilityQualifier, CucsStorageReadType, CucsStorageSystemFsmCurrentFsm, CucsStorageSystemFsmStageName, CucsStorageSystemFsmTaskItem, CucsStorageTargetPath, CucsStorageTechnology, CucsStorageVDriveState, CucsStorageVsanRefSwitchId, CucsVnicConfigIssues, ) = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-TC-MIB", "CucsAaaConfigState", "CucsConditionRemoteInvRslt", "CucsEquipmentOperability", "CucsEquipmentPowerState", "CucsEquipmentPresence", "CucsEquipmentSensorThresholdStatus", "CucsFabricZoningState", "CucsFsmCompletion", "CucsFsmFlags", "CucsFsmFsmStageStatus", "CucsFsmLifecycle", "CucsPolicyPolicyOwner", "CucsStorageAccessType", "CucsStorageActualWriteType", "CucsStorageBatteryType", "CucsStorageBbuStatus", "CucsStorageBootableType", "CucsStorageCacheType", "CucsStorageConfiguration", "CucsStorageConfiguredWriteType", "CucsStorageConnectionProtocol", "CucsStorageControllerFaultMonitoring", "CucsStorageControllerId", "CucsStorageControllerStatus", "CucsStorageControllerType", "CucsStorageDisklessAction", "CucsStorageEpAccess", "CucsStorageEtherIfVlanType", "CucsStorageFFCardHealth", "CucsStorageFFCardMode", "CucsStorageFFCardState", "CucsStorageFFCardSync", "CucsStorageFFCardWriteEnable", "CucsStorageFFControllerHealth", "CucsStorageFFControllerState", "CucsStorageFFDriveRemovable", "CucsStorageFFDriveState", "CucsStorageFFDriveType", "CucsStorageFFDriveVisible", "CucsStorageFFHasError", "CucsStorageFFRAIDHealth", "CucsStorageFFRAIDState", "CucsStorageFFRWType", "CucsStorageFFRaidSyncSupport", "CucsStorageFFSlotENUM", "CucsStorageFFType", "CucsStorageFcZoningType", "CucsStorageFileSystemStatus", "CucsStorageFlexFlashControllerFsmCurrentFsm", "CucsStorageFlexFlashControllerFsmStageName", "CucsStorageFlexFlashControllerFsmTaskFlags", "CucsStorageFlexFlashControllerFsmTaskItem", "CucsStorageFlexFlashControllerId", "CucsStorageIOType", "CucsStorageIniGroupOperProtocol", "CucsStorageIniGroupOwner", "CucsStorageIniGroupProtocol", "CucsStorageKeyType", "CucsStorageLearnCycleRequested", "CucsStorageLearnMode", "CucsStorageLinkSpeed", "CucsStorageLocalDiskConfigFlexFlashRAIDReportingState", "CucsStorageLocalDiskConfigFlexFlashState", "CucsStorageLocalDiskMode", "CucsStorageLocalDiskPartitionType", "CucsStorageLunType", "CucsStorageOperState", "CucsStorageOperatingModeType", "CucsStorageOperationRequestType", "CucsStorageOperationState", "CucsStorageOperationStateType", "CucsStorageOperationType", "CucsStoragePDriveStatus", "CucsStoragePowerState", "CucsStorageProtocol", "CucsStorageRaidBatteryOperabilityQualifier", "CucsStorageReadType", "CucsStorageSystemFsmCurrentFsm", "CucsStorageSystemFsmStageName", "CucsStorageSystemFsmTaskItem", "CucsStorageTargetPath", "CucsStorageTechnology", "CucsStorageVDriveState", "CucsStorageVsanRefSwitchId", "CucsVnicConfigIssues")
( InetAddressIPv4, InetAddressIPv6, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressIPv6")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( Bits, Counter32, Counter64, Gauge32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "Gauge32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "Unsigned32")
( DateAndTime, DisplayString, MacAddress, RowPointer, TextualConvention, TimeInterval, TimeStamp, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "MacAddress", "RowPointer", "TextualConvention", "TimeInterval", "TimeStamp", "TruthValue")

# Objects

cucsStorageObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45)).setRevisions(("2014-05-07 00:00",))
if mibBuilder.loadTexts: cucsStorageObjects.setOrganization("Cisco Systems Inc.")
if mibBuilder.loadTexts: cucsStorageObjects.setContactInfo("Cisco Systems\nCustomer Service\n\nPostal: 170 W Tasman Drive\nSan Jose, CA  95134\nUSA\n\nTel: +1 800 553 -NETS\n\nE-mail: cs-san@cisco.com, cs-lan-switch-snmp@cisco.com")
if mibBuilder.loadTexts: cucsStorageObjects.setDescription("MIB representation of the Cisco Unified Computing System\nSTORAGE management information model package")
cucsStorageControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1))
if mibBuilder.loadTexts: cucsStorageControllerTable.setDescription("Cisco UCS storage:Controller managed object table")
cucsStorageControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageControllerInstanceId"))
if mibBuilder.loadTexts: cucsStorageControllerEntry.setDescription("Entry for the cucsStorageControllerTable table.")
cucsStorageControllerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageControllerInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageControllerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerDn.setDescription("Cisco UCS storage:Controller:dn managed object property")
cucsStorageControllerRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRn.setDescription("Cisco UCS storage:Controller:rn managed object property")
cucsStorageControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 4), CucsStorageControllerId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerId.setDescription("Cisco UCS storage:Controller:id managed object property")
cucsStorageControllerModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerModel.setDescription("Cisco UCS storage:Controller:model managed object property")
cucsStorageControllerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 6), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperState.setDescription("Cisco UCS storage:Controller:operState managed object property")
cucsStorageControllerOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 7), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperability.setDescription("Cisco UCS storage:Controller:operability managed object property")
cucsStorageControllerPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPciAddr.setDescription("Cisco UCS storage:Controller:pciAddr managed object property")
cucsStorageControllerPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPciSlot.setDescription("Cisco UCS storage:Controller:pciSlot managed object property")
cucsStorageControllerPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 10), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPerf.setDescription("Cisco UCS storage:Controller:perf managed object property")
cucsStorageControllerPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 11), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPower.setDescription("Cisco UCS storage:Controller:power managed object property")
cucsStorageControllerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 12), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPresence.setDescription("Cisco UCS storage:Controller:presence managed object property")
cucsStorageControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRevision.setDescription("Cisco UCS storage:Controller:revision managed object property")
cucsStorageControllerSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerSerial.setDescription("Cisco UCS storage:Controller:serial managed object property")
cucsStorageControllerThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 15), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerThermal.setDescription("Cisco UCS storage:Controller:thermal managed object property")
cucsStorageControllerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 16), CucsStorageControllerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerType.setDescription("Cisco UCS storage:Controller:type managed object property")
cucsStorageControllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVendor.setDescription("Cisco UCS storage:Controller:vendor managed object property")
cucsStorageControllerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 18), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVoltage.setDescription("Cisco UCS storage:Controller:voltage managed object property")
cucsStorageControllerRaidSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRaidSupport.setDescription("Cisco UCS storage:Controller:raidSupport managed object property")
cucsStorageControllerFaultMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 20), CucsStorageControllerFaultMonitoring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerFaultMonitoring.setDescription("Cisco UCS storage:Controller:faultMonitoring managed\nobject property")
cucsStorageControllerHwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerHwRevision.setDescription("Cisco UCS storage:Controller:hwRevision managed object property")
cucsStorageControllerDeviceRaidSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 23), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerDeviceRaidSupport.setDescription("Cisco UCS storage:Controller:deviceRaidSupport\nmanaged object property")
cucsStorageControllerOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 24), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperQualifierReason.setDescription("Cisco UCS storage:Controller:operQualifierReason\nmanaged object property")
cucsStorageControllerControllerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 25), CucsStorageControllerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerControllerStatus.setDescription("Cisco UCS storage:Controller:controllerStatus\nmanaged object property")
cucsStorageControllerLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 26), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerLc.setDescription("Cisco UCS storage:Controller:lc managed object property")
cucsStorageControllerOobControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOobControllerId.setDescription("Cisco UCS storage:Controller:oobControllerId managed\nobject property")
cucsStorageControllerOobInterfaceSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOobInterfaceSupported.setDescription("Cisco UCS storage:Controller:oobInterfaceSupported\nmanaged object property")
cucsStorageControllerRebuildRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRebuildRate.setDescription("Cisco UCS storage:Controller:rebuildRate managed object property")
cucsStorageControllerLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 30), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerLocationDn.setDescription("Cisco UCS storage:Controller:locationDn managed object property")
cucsStorageControllerPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPartNumber.setDescription("Cisco UCS storage:Controller:partNumber managed object property")
cucsStorageControllerVid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVid.setDescription("Cisco UCS storage:Controller:vid managed object property")
cucsStorageDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2))
if mibBuilder.loadTexts: cucsStorageDriveTable.setDescription("Cisco UCS storage:Drive managed object table")
cucsStorageDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageDriveEntry.setDescription("Entry for the cucsStorageDriveTable table.")
cucsStorageDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageDriveInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveDn.setDescription("Cisco UCS storage:Drive:dn managed object property")
cucsStorageDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveRn.setDescription("Cisco UCS storage:Drive:rn managed object property")
cucsStorageDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveId.setDescription("Cisco UCS storage:Drive:id managed object property")
cucsStorageDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveModel.setDescription("Cisco UCS storage:Drive:model managed object property")
cucsStorageDrivePciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDrivePciAddr.setDescription("Cisco UCS storage:Drive:pciAddr managed object property")
cucsStorageDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveRevision.setDescription("Cisco UCS storage:Drive:revision managed object property")
cucsStorageDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveSerial.setDescription("Cisco UCS storage:Drive:serial managed object property")
cucsStorageDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveVendor.setDescription("Cisco UCS storage:Drive:vendor managed object property")
cucsStorageItemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3))
if mibBuilder.loadTexts: cucsStorageItemTable.setDescription("Cisco UCS storage:Item managed object table")
cucsStorageItemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageItemInstanceId"))
if mibBuilder.loadTexts: cucsStorageItemEntry.setDescription("Entry for the cucsStorageItemTable table.")
cucsStorageItemInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageItemInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageItemDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemDn.setDescription("Cisco UCS storage:Item:dn managed object property")
cucsStorageItemRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemRn.setDescription("Cisco UCS storage:Item:rn managed object property")
cucsStorageItemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemName.setDescription("Cisco UCS storage:Item:name managed object property")
cucsStorageItemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 5), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemSize.setDescription("Cisco UCS storage:Item:size managed object property")
cucsStorageItemUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemUsed.setDescription("Cisco UCS storage:Item:used managed object property")
cucsStorageItemOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 7), CucsStorageFileSystemStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemOperState.setDescription("Cisco UCS storage:Item:operState managed object property")
cucsStorageLocalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4))
if mibBuilder.loadTexts: cucsStorageLocalDiskTable.setDescription("Cisco UCS storage:LocalDisk managed object table")
cucsStorageLocalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskEntry.setDescription("Entry for the cucsStorageLocalDiskTable table.")
cucsStorageLocalDiskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalDiskInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalDiskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDn.setDescription("Cisco UCS storage:LocalDisk:dn managed object property")
cucsStorageLocalDiskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskRn.setDescription("Cisco UCS storage:LocalDisk:rn managed object property")
cucsStorageLocalDiskBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskBlockSize.setDescription("Cisco UCS storage:LocalDisk:blockSize managed object property")
cucsStorageLocalDiskConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConnectionProtocol.setDescription("Cisco UCS storage:LocalDisk:connectionProtocol\nmanaged object property")
cucsStorageLocalDiskId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskId.setDescription("Cisco UCS storage:LocalDisk:id managed object property")
cucsStorageLocalDiskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskModel.setDescription("Cisco UCS storage:LocalDisk:model managed object property")
cucsStorageLocalDiskNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskNumberOfBlocks.setDescription("Cisco UCS storage:LocalDisk:numberOfBlocks managed\nobject property")
cucsStorageLocalDiskOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskOperability.setDescription("Cisco UCS storage:LocalDisk:operability managed object property")
cucsStorageLocalDiskPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPresence.setDescription("Cisco UCS storage:LocalDisk:presence managed object property")
cucsStorageLocalDiskRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskRevision.setDescription("Cisco UCS storage:LocalDisk:revision managed object property")
cucsStorageLocalDiskSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSerial.setDescription("Cisco UCS storage:LocalDisk:serial managed object property")
cucsStorageLocalDiskSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSize.setDescription("Cisco UCS storage:LocalDisk:size managed object property")
cucsStorageLocalDiskVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskVendor.setDescription("Cisco UCS storage:LocalDisk:vendor managed object property")
cucsStorageLocalDiskLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 15), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskLc.setDescription("Cisco UCS storage:LocalDisk:lc managed object property")
cucsStorageLocalDiskOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskOperQualifierReason.setDescription("Cisco UCS storage:LocalDisk:operQualifierReason\nmanaged object property")
cucsStorageLocalDiskDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 17), CucsStorageTechnology()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDeviceType.setDescription("Cisco UCS storage:LocalDisk:deviceType managed object property")
cucsStorageLocalDiskDiskState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 18), CucsStoragePDriveStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDiskState.setDescription("Cisco UCS storage:LocalDisk:diskState managed object property")
cucsStorageLocalDiskLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 19), CucsStorageLinkSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskLinkSpeed.setDescription("Cisco UCS storage:LocalDisk:linkSpeed managed object property")
cucsStorageLocalDiskPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 20), CucsStoragePowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPowerState.setDescription("Cisco UCS storage:LocalDisk:powerState managed object property")
cucsStorageLocalDiskConfigDefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefTable.setDescription("Cisco UCS storage:LocalDiskConfigDef managed object table")
cucsStorageLocalDiskConfigDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskConfigDefInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefEntry.setDescription("Entry for the cucsStorageLocalDiskConfigDefTable table.")
cucsStorageLocalDiskConfigDefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalDiskConfigDefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDn.setDescription("Cisco UCS storage:LocalDiskConfigDef:dn managed object property")
cucsStorageLocalDiskConfigDefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefRn.setDescription("Cisco UCS storage:LocalDiskConfigDef:rn managed object property")
cucsStorageLocalDiskConfigDefDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDescr.setDescription("Cisco UCS storage:LocalDiskConfigDef:descr managed\nobject property")
cucsStorageLocalDiskConfigDefIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefIntId.setDescription("Cisco UCS storage:LocalDiskConfigDef:intId managed\nobject property")
cucsStorageLocalDiskConfigDefMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 6), CucsStorageLocalDiskMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefMode.setDescription("Cisco UCS storage:LocalDiskConfigDef:mode managed\nobject property")
cucsStorageLocalDiskConfigDefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefName.setDescription("Cisco UCS storage:LocalDiskConfigDef:name managed\nobject property")
cucsStorageLocalDiskConfigDefProtectConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefProtectConfig.setDescription("Cisco UCS storage:LocalDiskConfigDef:protectConfig\nmanaged object property")
cucsStorageLocalDiskConfigDefPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyLevel.setDescription("Cisco UCS storage:LocalDiskConfigDef:policyLevel\nmanaged object property")
cucsStorageLocalDiskConfigDefPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 10), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyOwner.setDescription("Cisco UCS storage:LocalDiskConfigDef:policyOwner\nmanaged object property")
cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 11), CucsStorageLocalDiskConfigFlexFlashRAIDReportingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState.setDescription("Cisco UCS storage:LocalDiskConfigDef:flexFlashRAIDReportingState\nmanaged object property")
cucsStorageLocalDiskConfigDefFlexFlashState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 12), CucsStorageLocalDiskConfigFlexFlashState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashState.setDescription("Cisco UCS storage:LocalDiskConfigDef:flexFlashState\nmanaged object property")
cucsStorageLocalDiskConfigPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyTable.setDescription("Cisco UCS storage:LocalDiskConfigPolicy managed object table")
cucsStorageLocalDiskConfigPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskConfigPolicyInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyEntry.setDescription("Entry for the cucsStorageLocalDiskConfigPolicyTable table.")
cucsStorageLocalDiskConfigPolicyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalDiskConfigPolicyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDn.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:dn managed\nobject property")
cucsStorageLocalDiskConfigPolicyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyRn.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:rn managed\nobject property")
cucsStorageLocalDiskConfigPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDescr.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:descr\nmanaged object property")
cucsStorageLocalDiskConfigPolicyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyIntId.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:intId\nmanaged object property")
cucsStorageLocalDiskConfigPolicyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 6), CucsStorageLocalDiskMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyMode.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:mode managed\nobject property")
cucsStorageLocalDiskConfigPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyName.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:name managed\nobject property")
cucsStorageLocalDiskConfigPolicyProtectConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyProtectConfig.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:protectConfig\nmanaged object property")
cucsStorageLocalDiskConfigPolicyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyLevel.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:policyLevel\nmanaged object property")
cucsStorageLocalDiskConfigPolicyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 10), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyOwner.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:policyOwner\nmanaged object property")
cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 11), CucsStorageLocalDiskConfigFlexFlashRAIDReportingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:flexFlashRAIDReportingSta\nte managed object property")
cucsStorageLocalDiskConfigPolicyFlexFlashState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 12), CucsStorageLocalDiskConfigFlexFlashState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashState.setDescription("Cisco UCS storage:LocalDiskConfigPolicy:flexFlashState\nmanaged object property")
cucsStorageLocalDiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7))
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionTable.setDescription("Cisco UCS storage:LocalDiskPartition managed object table")
cucsStorageLocalDiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskPartitionInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionEntry.setDescription("Entry for the cucsStorageLocalDiskPartitionTable table.")
cucsStorageLocalDiskPartitionInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalDiskPartitionDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionDn.setDescription("Cisco UCS storage:LocalDiskPartition:dn managed object property")
cucsStorageLocalDiskPartitionRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionRn.setDescription("Cisco UCS storage:LocalDiskPartition:rn managed object property")
cucsStorageLocalDiskPartitionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionDescr.setDescription("Cisco UCS storage:LocalDiskPartition:descr managed\nobject property")
cucsStorageLocalDiskPartitionIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionIntId.setDescription("Cisco UCS storage:LocalDiskPartition:intId managed\nobject property")
cucsStorageLocalDiskPartitionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionName.setDescription("Cisco UCS storage:LocalDiskPartition:name managed\nobject property")
cucsStorageLocalDiskPartitionOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionOrder.setDescription("Cisco UCS storage:LocalDiskPartition:order managed\nobject property")
cucsStorageLocalDiskPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionSize.setDescription("Cisco UCS storage:LocalDiskPartition:size managed\nobject property")
cucsStorageLocalDiskPartitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 9), CucsStorageLocalDiskPartitionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionType.setDescription("Cisco UCS storage:LocalDiskPartition:type managed\nobject property")
cucsStorageLocalDiskPartitionPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPolicyLevel.setDescription("Cisco UCS storage:LocalDiskPartition:policyLevel\nmanaged object property")
cucsStorageLocalDiskPartitionPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 11), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPolicyOwner.setDescription("Cisco UCS storage:LocalDiskPartition:policyOwner\nmanaged object property")
cucsStorageLocalLunTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8))
if mibBuilder.loadTexts: cucsStorageLocalLunTable.setDescription("Cisco UCS storage:LocalLun managed object table")
cucsStorageLocalLunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalLunInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalLunEntry.setDescription("Entry for the cucsStorageLocalLunTable table.")
cucsStorageLocalLunInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalLunInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalLunDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunDn.setDescription("Cisco UCS storage:LocalLun:dn managed object property")
cucsStorageLocalLunRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunRn.setDescription("Cisco UCS storage:LocalLun:rn managed object property")
cucsStorageLocalLunBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunBlockSize.setDescription("Cisco UCS storage:LocalLun:blockSize managed object property")
cucsStorageLocalLunConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunConnectionProtocol.setDescription("Cisco UCS storage:LocalLun:connectionProtocol\nmanaged object property")
cucsStorageLocalLunId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunId.setDescription("Cisco UCS storage:LocalLun:id managed object property")
cucsStorageLocalLunModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunModel.setDescription("Cisco UCS storage:LocalLun:model managed object property")
cucsStorageLocalLunNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunNumberOfBlocks.setDescription("Cisco UCS storage:LocalLun:numberOfBlocks managed\nobject property")
cucsStorageLocalLunOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunOperability.setDescription("Cisco UCS storage:LocalLun:operability managed object property")
cucsStorageLocalLunPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunPresence.setDescription("Cisco UCS storage:LocalLun:presence managed object property")
cucsStorageLocalLunRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunRevision.setDescription("Cisco UCS storage:LocalLun:revision managed object property")
cucsStorageLocalLunSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunSerial.setDescription("Cisco UCS storage:LocalLun:serial managed object property")
cucsStorageLocalLunSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunSize.setDescription("Cisco UCS storage:LocalLun:size managed object property")
cucsStorageLocalLunType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 14), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunType.setDescription("Cisco UCS storage:LocalLun:type managed object property")
cucsStorageLocalLunVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunVendor.setDescription("Cisco UCS storage:LocalLun:vendor managed object property")
cucsStorageLocalLunLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 16), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunLc.setDescription("Cisco UCS storage:LocalLun:lc managed object property")
cucsStorageLocalLunOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunOperQualifierReason.setDescription("Cisco UCS storage:LocalLun:operQualifierReason\nmanaged object property")
cucsStorageLunDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9))
if mibBuilder.loadTexts: cucsStorageLunDiskTable.setDescription("Cisco UCS storage:LunDisk managed object table")
cucsStorageLunDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLunDiskInstanceId"))
if mibBuilder.loadTexts: cucsStorageLunDiskEntry.setDescription("Entry for the cucsStorageLunDiskTable table.")
cucsStorageLunDiskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLunDiskInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLunDiskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskDn.setDescription("Cisco UCS storage:LunDisk:dn managed object property")
cucsStorageLunDiskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskRn.setDescription("Cisco UCS storage:LunDisk:rn managed object property")
cucsStorageLunDiskId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskId.setDescription("Cisco UCS storage:LunDisk:id managed object property")
cucsStorageQualTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10))
if mibBuilder.loadTexts: cucsStorageQualTable.setDescription("Cisco UCS storage:Qual managed object table")
cucsStorageQualEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageQualInstanceId"))
if mibBuilder.loadTexts: cucsStorageQualEntry.setDescription("Entry for the cucsStorageQualTable table.")
cucsStorageQualInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageQualInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageQualDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualDn.setDescription("Cisco UCS storage:Qual:dn managed object property")
cucsStorageQualRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualRn.setDescription("Cisco UCS storage:Qual:rn managed object property")
cucsStorageQualBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualBlockSize.setDescription("Cisco UCS storage:Qual:blockSize managed object property")
cucsStorageQualMaxCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 5), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualMaxCap.setDescription("Cisco UCS storage:Qual:maxCap managed object property")
cucsStorageQualMinCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 6), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualMinCap.setDescription("Cisco UCS storage:Qual:minCap managed object property")
cucsStorageQualNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 7), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualNumberOfBlocks.setDescription("Cisco UCS storage:Qual:numberOfBlocks managed object property")
cucsStorageQualPerDiskCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualPerDiskCap.setDescription("Cisco UCS storage:Qual:perDiskCap managed object property")
cucsStorageQualUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualUnits.setDescription("Cisco UCS storage:Qual:units managed object property")
cucsStorageQualDiskless = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 10), CucsStorageDisklessAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualDiskless.setDescription("Cisco UCS storage:Qual:diskless managed object property")
cucsStorageQualNumberOfFlexFlashCards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualNumberOfFlexFlashCards.setDescription("Cisco UCS storage:Qual:numberOfFlexFlashCards\nmanaged object property")
cucsStorageRaidBatteryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11))
if mibBuilder.loadTexts: cucsStorageRaidBatteryTable.setDescription("Cisco UCS storage:RaidBattery managed object table")
cucsStorageRaidBatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageRaidBatteryInstanceId"))
if mibBuilder.loadTexts: cucsStorageRaidBatteryEntry.setDescription("Entry for the cucsStorageRaidBatteryTable table.")
cucsStorageRaidBatteryInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageRaidBatteryInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageRaidBatteryDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryDn.setDescription("Cisco UCS storage:RaidBattery:dn managed object property")
cucsStorageRaidBatteryRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryRn.setDescription("Cisco UCS storage:RaidBattery:rn managed object property")
cucsStorageRaidBatteryBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBlockSize.setDescription("Cisco UCS storage:RaidBattery:blockSize managed object property")
cucsStorageRaidBatteryConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryConnectionProtocol.setDescription("Cisco UCS storage:RaidBattery:connectionProtocol\nmanaged object property")
cucsStorageRaidBatteryId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryId.setDescription("Cisco UCS storage:RaidBattery:id managed object property")
cucsStorageRaidBatteryModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryModel.setDescription("Cisco UCS storage:RaidBattery:model managed object property")
cucsStorageRaidBatteryNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryNumberOfBlocks.setDescription("Cisco UCS storage:RaidBattery:numberOfBlocks managed\nobject property")
cucsStorageRaidBatteryOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperability.setDescription("Cisco UCS storage:RaidBattery:operability managed\nobject property")
cucsStorageRaidBatteryPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryPresence.setDescription("Cisco UCS storage:RaidBattery:presence managed object property")
cucsStorageRaidBatteryRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryRevision.setDescription("Cisco UCS storage:RaidBattery:revision managed object property")
cucsStorageRaidBatterySerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatterySerial.setDescription("Cisco UCS storage:RaidBattery:serial managed object property")
cucsStorageRaidBatterySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatterySize.setDescription("Cisco UCS storage:RaidBattery:size managed object property")
cucsStorageRaidBatteryVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryVendor.setDescription("Cisco UCS storage:RaidBattery:vendor managed object property")
cucsStorageRaidBatteryOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperQualifierReason.setDescription("Cisco UCS storage:RaidBattery:operQualifierReason\nmanaged object property")
cucsStorageRaidBatteryBatteryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 16), CucsStorageBatteryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBatteryType.setDescription("Cisco UCS storage:RaidBattery:batteryType managed\nobject property")
cucsStorageRaidBatteryCapacityPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryCapacityPercentage.setDescription("Cisco UCS storage:RaidBattery:capacityPercentage\nmanaged object property")
cucsStorageRaidBatteryOperabilityQualifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 18), CucsStorageRaidBatteryOperabilityQualifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifier.setDescription("Cisco UCS storage:RaidBattery:operabilityQualifier\nmanaged object property")
cucsStorageRaidBatteryOperabilityQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifierReason.setDescription("Cisco UCS storage:RaidBattery:operabilityQualifierReason\nmanaged object property")
cucsStorageRaidBatteryTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryTemperature.setDescription("Cisco UCS storage:RaidBattery:temperature managed\nobject property")
cucsStorageRaidBatteryBbuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 21), CucsStorageBbuStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBbuStatus.setDescription("Cisco UCS storage:RaidBattery:bbuStatus managed object property")
cucsStorageRaidBatteryLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 22), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLc.setDescription("Cisco UCS storage:RaidBattery:lc managed object property")
cucsStorageRaidBatteryLearnCycleRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 23), CucsStorageLearnCycleRequested()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnCycleRequested.setDescription("Cisco UCS storage:RaidBattery:learnCycleRequested\nmanaged object property")
cucsStorageRaidBatteryLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 24), CucsStorageLearnMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnMode.setDescription("Cisco UCS storage:RaidBattery:learnMode managed object property")
cucsStorageRaidBatteryNextLearnCycleTs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryNextLearnCycleTs.setDescription("Cisco UCS storage:RaidBattery:nextLearnCycleTs\nmanaged object property")
cucsStorageEnclosureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12))
if mibBuilder.loadTexts: cucsStorageEnclosureTable.setDescription("Cisco UCS storage:Enclosure managed object table")
cucsStorageEnclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEnclosureInstanceId"))
if mibBuilder.loadTexts: cucsStorageEnclosureEntry.setDescription("Entry for the cucsStorageEnclosureTable table.")
cucsStorageEnclosureInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageEnclosureInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageEnclosureDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureDn.setDescription("Cisco UCS storage:Enclosure:dn managed object property")
cucsStorageEnclosureRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureRn.setDescription("Cisco UCS storage:Enclosure:rn managed object property")
cucsStorageEnclosureId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureId.setDescription("Cisco UCS storage:Enclosure:id managed object property")
cucsStorageEnclosureModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureModel.setDescription("Cisco UCS storage:Enclosure:model managed object property")
cucsStorageEnclosureNumSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureNumSlots.setDescription("Cisco UCS storage:Enclosure:numSlots managed object property")
cucsStorageEnclosureRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureRevision.setDescription("Cisco UCS storage:Enclosure:revision managed object property")
cucsStorageEnclosureSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureSerial.setDescription("Cisco UCS storage:Enclosure:serial managed object property")
cucsStorageEnclosureVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureVendor.setDescription("Cisco UCS storage:Enclosure:vendor managed object property")
cucsStorageEnclosureLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 10), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureLc.setDescription("Cisco UCS storage:Enclosure:lc managed object property")
cucsStorageLocalDiskSlotEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13))
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpTable.setDescription("Cisco UCS storage:LocalDiskSlotEp managed object table")
cucsStorageLocalDiskSlotEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskSlotEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpEntry.setDescription("Entry for the cucsStorageLocalDiskSlotEpTable table.")
cucsStorageLocalDiskSlotEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageLocalDiskSlotEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpDn.setDescription("Cisco UCS storage:LocalDiskSlotEp:dn managed object property")
cucsStorageLocalDiskSlotEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpRn.setDescription("Cisco UCS storage:LocalDiskSlotEp:rn managed object property")
cucsStorageLocalDiskSlotEpConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 4), CucsStorageConfiguration()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpConfiguration.setDescription("Cisco UCS storage:LocalDiskSlotEp:configuration\nmanaged object property")
cucsStorageLocalDiskSlotEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpId.setDescription("Cisco UCS storage:LocalDiskSlotEp:id managed object property")
cucsStorageLocalDiskSlotEpOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 6), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperability.setDescription("Cisco UCS storage:LocalDiskSlotEp:operability\nmanaged object property")
cucsStorageLocalDiskSlotEpPeerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPeerDn.setDescription("Cisco UCS storage:LocalDiskSlotEp:peerDn managed object property")
cucsStorageLocalDiskSlotEpPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 8), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPresence.setDescription("Cisco UCS storage:LocalDiskSlotEp:presence managed\nobject property")
cucsStorageLocalDiskSlotEpOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperQualifierReason.setDescription("Cisco UCS storage:LocalDiskSlotEp:operQualifierReason\nmanaged object property")
cucsStorageAuthKeyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14))
if mibBuilder.loadTexts: cucsStorageAuthKeyTable.setDescription("Cisco UCS storage:AuthKey managed object table")
cucsStorageAuthKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageAuthKeyInstanceId"))
if mibBuilder.loadTexts: cucsStorageAuthKeyEntry.setDescription("Entry for the cucsStorageAuthKeyTable table.")
cucsStorageAuthKeyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageAuthKeyInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageAuthKeyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyDn.setDescription("Cisco UCS storage:AuthKey:dn managed object property")
cucsStorageAuthKeyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyRn.setDescription("Cisco UCS storage:AuthKey:rn managed object property")
cucsStorageAuthKeyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyDescr.setDescription("Cisco UCS storage:AuthKey:descr managed object property")
cucsStorageAuthKeyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyIntId.setDescription("Cisco UCS storage:AuthKey:intId managed object property")
cucsStorageAuthKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyName.setDescription("Cisco UCS storage:AuthKey:name managed object property")
cucsStorageAuthKeyPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPassword.setDescription("Cisco UCS storage:AuthKey:password managed object property")
cucsStorageAuthKeyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyLevel.setDescription("Cisco UCS storage:AuthKey:policyLevel managed object property")
cucsStorageAuthKeyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyOwner.setDescription("Cisco UCS storage:AuthKey:policyOwner managed object property")
cucsStorageAuthKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 10), CucsStorageKeyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyType.setDescription("Cisco UCS storage:AuthKey:type managed object property")
cucsStorageAuthKeyUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyUserId.setDescription("Cisco UCS storage:AuthKey:userId managed object property")
cucsStorageConnectionDefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15))
if mibBuilder.loadTexts: cucsStorageConnectionDefTable.setDescription("Cisco UCS storage:ConnectionDef managed object table")
cucsStorageConnectionDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageConnectionDefInstanceId"))
if mibBuilder.loadTexts: cucsStorageConnectionDefEntry.setDescription("Entry for the cucsStorageConnectionDefTable table.")
cucsStorageConnectionDefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageConnectionDefInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageConnectionDefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefDn.setDescription("Cisco UCS storage:ConnectionDef:dn managed object property")
cucsStorageConnectionDefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefRn.setDescription("Cisco UCS storage:ConnectionDef:rn managed object property")
cucsStorageConnectionDefDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefDescr.setDescription("Cisco UCS storage:ConnectionDef:descr managed object property")
cucsStorageConnectionDefIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefIntId.setDescription("Cisco UCS storage:ConnectionDef:intId managed object property")
cucsStorageConnectionDefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefName.setDescription("Cisco UCS storage:ConnectionDef:name managed object property")
cucsStorageConnectionDefOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefOperState.setDescription("Cisco UCS storage:ConnectionDef:operState managed\nobject property")
cucsStorageConnectionDefPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyLevel.setDescription("Cisco UCS storage:ConnectionDef:policyLevel managed\nobject property")
cucsStorageConnectionDefPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyOwner.setDescription("Cisco UCS storage:ConnectionDef:policyOwner managed\nobject property")
cucsStorageConnectionDefZoningType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 10), CucsStorageFcZoningType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefZoningType.setDescription("Cisco UCS storage:ConnectionDef:zoningType managed\nobject property")
cucsStorageConnectionPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16))
if mibBuilder.loadTexts: cucsStorageConnectionPolicyTable.setDescription("Cisco UCS storage:ConnectionPolicy managed object table")
cucsStorageConnectionPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageConnectionPolicyInstanceId"))
if mibBuilder.loadTexts: cucsStorageConnectionPolicyEntry.setDescription("Entry for the cucsStorageConnectionPolicyTable table.")
cucsStorageConnectionPolicyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageConnectionPolicyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDn.setDescription("Cisco UCS storage:ConnectionPolicy:dn managed object property")
cucsStorageConnectionPolicyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyRn.setDescription("Cisco UCS storage:ConnectionPolicy:rn managed object property")
cucsStorageConnectionPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDescr.setDescription("Cisco UCS storage:ConnectionPolicy:descr managed object property")
cucsStorageConnectionPolicyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyIntId.setDescription("Cisco UCS storage:ConnectionPolicy:intId managed object property")
cucsStorageConnectionPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyName.setDescription("Cisco UCS storage:ConnectionPolicy:name managed object property")
cucsStorageConnectionPolicyOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyOperState.setDescription("Cisco UCS storage:ConnectionPolicy:operState managed\nobject property")
cucsStorageConnectionPolicyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyLevel.setDescription("Cisco UCS storage:ConnectionPolicy:policyLevel\nmanaged object property")
cucsStorageConnectionPolicyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyOwner.setDescription("Cisco UCS storage:ConnectionPolicy:policyOwner\nmanaged object property")
cucsStorageConnectionPolicyZoningType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 10), CucsStorageFcZoningType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyZoningType.setDescription("Cisco UCS storage:ConnectionPolicy:zoningType\nmanaged object property")
cucsStorageDomainEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17))
if mibBuilder.loadTexts: cucsStorageDomainEpTable.setDescription("Cisco UCS storage:DomainEp managed object table")
cucsStorageDomainEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDomainEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageDomainEpEntry.setDescription("Entry for the cucsStorageDomainEpTable table.")
cucsStorageDomainEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageDomainEpInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageDomainEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDomainEpDn.setDescription("Cisco UCS storage:DomainEp:dn managed object property")
cucsStorageDomainEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDomainEpRn.setDescription("Cisco UCS storage:DomainEp:rn managed object property")
cucsStorageEpUserTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18))
if mibBuilder.loadTexts: cucsStorageEpUserTable.setDescription("Cisco UCS storage:EpUser managed object table")
cucsStorageEpUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEpUserInstanceId"))
if mibBuilder.loadTexts: cucsStorageEpUserEntry.setDescription("Entry for the cucsStorageEpUserTable table.")
cucsStorageEpUserInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageEpUserInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageEpUserDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDn.setDescription("Cisco UCS storage:EpUser:dn managed object property")
cucsStorageEpUserRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserRn.setDescription("Cisco UCS storage:EpUser:rn managed object property")
cucsStorageEpUserConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 4), CucsAaaConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserConfigState.setDescription("Cisco UCS storage:EpUser:configState managed object property")
cucsStorageEpUserConfigStatusMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserConfigStatusMessage.setDescription("Cisco UCS storage:EpUser:configStatusMessage managed\nobject property")
cucsStorageEpUserDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDescr.setDescription("Cisco UCS storage:EpUser:descr managed object property")
cucsStorageEpUserDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDomain.setDescription("Cisco UCS storage:EpUser:domain managed object property")
cucsStorageEpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserName.setDescription("Cisco UCS storage:EpUser:name managed object property")
cucsStorageEpUserPriv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 9), CucsStorageEpAccess()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPriv.setDescription("Cisco UCS storage:EpUser:priv managed object property")
cucsStorageEpUserPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPwd.setDescription("Cisco UCS storage:EpUser:pwd managed object property")
cucsStorageEpUserPwdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPwdSet.setDescription("Cisco UCS storage:EpUser:pwdSet managed object property")
cucsStorageEtherIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19))
if mibBuilder.loadTexts: cucsStorageEtherIfTable.setDescription("Cisco UCS storage:EtherIf managed object table")
cucsStorageEtherIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEtherIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageEtherIfEntry.setDescription("Entry for the cucsStorageEtherIfTable table.")
cucsStorageEtherIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageEtherIfInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageEtherIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfDn.setDescription("Cisco UCS storage:EtherIf:dn managed object property")
cucsStorageEtherIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfRn.setDescription("Cisco UCS storage:EtherIf:rn managed object property")
cucsStorageEtherIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfName.setDescription("Cisco UCS storage:EtherIf:name managed object property")
cucsStorageEtherIfVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 5), CucsStorageEtherIfVlanType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfVlanType.setDescription("Cisco UCS storage:EtherIf:vlanType managed object property")
cucsStorageFcIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20))
if mibBuilder.loadTexts: cucsStorageFcIfTable.setDescription("Cisco UCS storage:FcIf managed object table")
cucsStorageFcIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcIfEntry.setDescription("Entry for the cucsStorageFcIfTable table.")
cucsStorageFcIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFcIfInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFcIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfDn.setDescription("Cisco UCS storage:FcIf:dn managed object property")
cucsStorageFcIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfRn.setDescription("Cisco UCS storage:FcIf:rn managed object property")
cucsStorageFcIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfName.setDescription("Cisco UCS storage:FcIf:name managed object property")
cucsStorageFcTargetEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21))
if mibBuilder.loadTexts: cucsStorageFcTargetEpTable.setDescription("Cisco UCS storage:FcTargetEp managed object table")
cucsStorageFcTargetEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcTargetEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcTargetEpEntry.setDescription("Entry for the cucsStorageFcTargetEpTable table.")
cucsStorageFcTargetEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFcTargetEpInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFcTargetEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpDn.setDescription("Cisco UCS storage:FcTargetEp:dn managed object property")
cucsStorageFcTargetEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpRn.setDescription("Cisco UCS storage:FcTargetEp:rn managed object property")
cucsStorageFcTargetEpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpDescr.setDescription("Cisco UCS storage:FcTargetEp:descr managed object property")
cucsStorageFcTargetEpPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 5), CucsStorageTargetPath()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpPath.setDescription("Cisco UCS storage:FcTargetEp:path managed object property")
cucsStorageFcTargetEpTargetwwpn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpTargetwwpn.setDescription("Cisco UCS storage:FcTargetEp:targetwwpn managed object property")
cucsStorageFcTargetIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22))
if mibBuilder.loadTexts: cucsStorageFcTargetIfTable.setDescription("Cisco UCS storage:FcTargetIf managed object table")
cucsStorageFcTargetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcTargetIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcTargetIfEntry.setDescription("Entry for the cucsStorageFcTargetIfTable table.")
cucsStorageFcTargetIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFcTargetIfInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFcTargetIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfDn.setDescription("Cisco UCS storage:FcTargetIf:dn managed object property")
cucsStorageFcTargetIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfRn.setDescription("Cisco UCS storage:FcTargetIf:rn managed object property")
cucsStorageFcTargetIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 4), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfId.setDescription("Cisco UCS storage:FcTargetIf:id managed object property")
cucsStorageFcTargetIfProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 5), CucsStorageProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfProt.setDescription("Cisco UCS storage:FcTargetIf:prot managed object property")
cucsStorageIScsiTargetIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23))
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfTable.setDescription("Cisco UCS storage:IScsiTargetIf managed object table")
cucsStorageIScsiTargetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageIScsiTargetIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfEntry.setDescription("Entry for the cucsStorageIScsiTargetIfTable table.")
cucsStorageIScsiTargetIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageIScsiTargetIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfDn.setDescription("Cisco UCS storage:IScsiTargetIf:dn managed object property")
cucsStorageIScsiTargetIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfRn.setDescription("Cisco UCS storage:IScsiTargetIf:rn managed object property")
cucsStorageIScsiTargetIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfName.setDescription("Cisco UCS storage:IScsiTargetIf:name managed object property")
cucsStorageIScsiTargetIfProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 5), CucsStorageProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfProt.setDescription("Cisco UCS storage:IScsiTargetIf:prot managed object property")
cucsStorageIniGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24))
if mibBuilder.loadTexts: cucsStorageIniGroupTable.setDescription("Cisco UCS storage:IniGroup managed object table")
cucsStorageIniGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageIniGroupInstanceId"))
if mibBuilder.loadTexts: cucsStorageIniGroupEntry.setDescription("Entry for the cucsStorageIniGroupTable table.")
cucsStorageIniGroupInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageIniGroupInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageIniGroupDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupDn.setDescription("Cisco UCS storage:IniGroup:dn managed object property")
cucsStorageIniGroupRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupRn.setDescription("Cisco UCS storage:IniGroup:rn managed object property")
cucsStorageIniGroupDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupDescr.setDescription("Cisco UCS storage:IniGroup:descr managed object property")
cucsStorageIniGroupGroupPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupGroupPolicyName.setDescription("Cisco UCS storage:IniGroup:groupPolicyName managed\nobject property")
cucsStorageIniGroupIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupIntId.setDescription("Cisco UCS storage:IniGroup:intId managed object property")
cucsStorageIniGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupName.setDescription("Cisco UCS storage:IniGroup:name managed object property")
cucsStorageIniGroupOperProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 8), CucsStorageIniGroupOperProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOperProtocol.setDescription("Cisco UCS storage:IniGroup:operProtocol managed object property")
cucsStorageIniGroupOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 9), CucsStorageIniGroupOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOwner.setDescription("Cisco UCS storage:IniGroup:owner managed object property")
cucsStorageIniGroupPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyLevel.setDescription("Cisco UCS storage:IniGroup:policyLevel managed object property")
cucsStorageIniGroupPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyName.setDescription("Cisco UCS storage:IniGroup:policyName managed object property")
cucsStorageIniGroupPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 12), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyOwner.setDescription("Cisco UCS storage:IniGroup:policyOwner managed object property")
cucsStorageIniGroupProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 13), CucsStorageIniGroupProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupProtocol.setDescription("Cisco UCS storage:IniGroup:protocol managed object property")
cucsStorageIniGroupRmtDiskCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupRmtDiskCfgName.setDescription("Cisco UCS storage:IniGroup:rmtDiskCfgName managed\nobject property")
cucsStorageIniGroupOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 15), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOperState.setDescription("Cisco UCS storage:IniGroup:operState managed object property")
cucsStorageInitiatorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25))
if mibBuilder.loadTexts: cucsStorageInitiatorTable.setDescription("Cisco UCS storage:Initiator managed object table")
cucsStorageInitiatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageInitiatorInstanceId"))
if mibBuilder.loadTexts: cucsStorageInitiatorEntry.setDescription("Entry for the cucsStorageInitiatorTable table.")
cucsStorageInitiatorInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageInitiatorInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageInitiatorDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDn.setDescription("Cisco UCS storage:Initiator:dn managed object property")
cucsStorageInitiatorRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorRn.setDescription("Cisco UCS storage:Initiator:rn managed object property")
cucsStorageInitiatorDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDescr.setDescription("Cisco UCS storage:Initiator:descr managed object property")
cucsStorageInitiatorIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorIntId.setDescription("Cisco UCS storage:Initiator:intId managed object property")
cucsStorageInitiatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorName.setDescription("Cisco UCS storage:Initiator:name managed object property")
cucsStorageInitiatorOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorOperState.setDescription("Cisco UCS storage:Initiator:operState managed object property")
cucsStorageInitiatorPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyLevel.setDescription("Cisco UCS storage:Initiator:policyLevel managed object property")
cucsStorageInitiatorPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyOwner.setDescription("Cisco UCS storage:Initiator:policyOwner managed object property")
cucsStorageInitiatorDuplicateTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDuplicateTarget.setDescription("Cisco UCS storage:Initiator:duplicateTarget managed\nobject property")
cucsStorageNodeEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26))
if mibBuilder.loadTexts: cucsStorageNodeEpTable.setDescription("Cisco UCS storage:NodeEp managed object table")
cucsStorageNodeEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageNodeEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageNodeEpEntry.setDescription("Entry for the cucsStorageNodeEpTable table.")
cucsStorageNodeEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageNodeEpInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageNodeEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpDn.setDescription("Cisco UCS storage:NodeEp:dn managed object property")
cucsStorageNodeEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpRn.setDescription("Cisco UCS storage:NodeEp:rn managed object property")
cucsStorageNodeEpEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpEpDn.setDescription("Cisco UCS storage:NodeEp:epDn managed object property")
cucsStorageNodeEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpId.setDescription("Cisco UCS storage:NodeEp:id managed object property")
cucsStorageSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27))
if mibBuilder.loadTexts: cucsStorageSystemTable.setDescription("Cisco UCS storage:System managed object table")
cucsStorageSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemEntry.setDescription("Entry for the cucsStorageSystemTable table.")
cucsStorageSystemInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageSystemInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageSystemDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemDn.setDescription("Cisco UCS storage:System:dn managed object property")
cucsStorageSystemRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemRn.setDescription("Cisco UCS storage:System:rn managed object property")
cucsStorageSystemFsmPrev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmPrev.setDescription("Cisco UCS storage:System:fsmPrev managed object property")
cucsStorageSystemFsmProgr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmProgr.setDescription("Cisco UCS storage:System:fsmProgr managed object property")
cucsStorageSystemFsmRmtInvErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrCode.setDescription("Cisco UCS storage:System:fsmRmtInvErrCode managed\nobject property")
cucsStorageSystemFsmRmtInvErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrDescr.setDescription("Cisco UCS storage:System:fsmRmtInvErrDescr managed\nobject property")
cucsStorageSystemFsmRmtInvRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 9), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvRslt.setDescription("Cisco UCS storage:System:fsmRmtInvRslt managed object property")
cucsStorageSystemFsmStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStamp.setDescription("Cisco UCS storage:System:fsmStamp managed object property")
cucsStorageSystemFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStatus.setDescription("Cisco UCS storage:System:fsmStatus managed object property")
cucsStorageSystemFsmTry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTry.setDescription("Cisco UCS storage:System:fsmTry managed object property")
cucsStorageSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemId.setDescription("Cisco UCS storage:System:id managed object property")
cucsStorageSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemName.setDescription("Cisco UCS storage:System:name managed object property")
cucsStorageSystemFsmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28))
if mibBuilder.loadTexts: cucsStorageSystemFsmTable.setDescription("Cisco UCS storage:SystemFsm managed object table")
cucsStorageSystemFsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmEntry.setDescription("Entry for the cucsStorageSystemFsmTable table.")
cucsStorageSystemFsmInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageSystemFsmInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageSystemFsmDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmDn.setDescription("Cisco UCS storage:SystemFsm:dn managed object property")
cucsStorageSystemFsmRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRn.setDescription("Cisco UCS storage:SystemFsm:rn managed object property")
cucsStorageSystemFsmCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmCompletionTime.setDescription("Cisco UCS storage:SystemFsm:completionTime managed\nobject property")
cucsStorageSystemFsmCurrentFsm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 5), CucsStorageSystemFsmCurrentFsm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmCurrentFsm.setDescription("Cisco UCS storage:SystemFsm:currentFsm managed object property")
cucsStorageSystemFsmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmDescr.setDescription("Cisco UCS storage:SystemFsm:descr managed object property")
cucsStorageSystemFsmFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 7), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmFsmStatus.setDescription("Cisco UCS storage:SystemFsm:fsmStatus managed object property")
cucsStorageSystemFsmProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmProgress.setDescription("Cisco UCS storage:SystemFsm:progress managed object property")
cucsStorageSystemFsmRmtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrCode.setDescription("Cisco UCS storage:SystemFsm:rmtErrCode managed object property")
cucsStorageSystemFsmRmtErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrDescr.setDescription("Cisco UCS storage:SystemFsm:rmtErrDescr managed object property")
cucsStorageSystemFsmRmtRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 11), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtRslt.setDescription("Cisco UCS storage:SystemFsm:rmtRslt managed object property")
cucsStorageSystemFsmStageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29))
if mibBuilder.loadTexts: cucsStorageSystemFsmStageTable.setDescription("Cisco UCS storage:SystemFsmStage managed object table")
cucsStorageSystemFsmStageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmStageInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmStageEntry.setDescription("Entry for the cucsStorageSystemFsmStageTable table.")
cucsStorageSystemFsmStageInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageSystemFsmStageDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDn.setDescription("Cisco UCS storage:SystemFsmStage:dn managed object property")
cucsStorageSystemFsmStageRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRn.setDescription("Cisco UCS storage:SystemFsmStage:rn managed object property")
cucsStorageSystemFsmStageDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDescr.setDescription("Cisco UCS storage:SystemFsmStage:descr managed object property")
cucsStorageSystemFsmStageLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageLastUpdateTime.setDescription("Cisco UCS storage:SystemFsmStage:lastUpdateTime\nmanaged object property")
cucsStorageSystemFsmStageName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 6), CucsStorageSystemFsmStageName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageName.setDescription("Cisco UCS storage:SystemFsmStage:name managed object property")
cucsStorageSystemFsmStageOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageOrder.setDescription("Cisco UCS storage:SystemFsmStage:order managed object property")
cucsStorageSystemFsmStageRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRetry.setDescription("Cisco UCS storage:SystemFsmStage:retry managed object property")
cucsStorageSystemFsmStageStageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 9), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageStageStatus.setDescription("Cisco UCS storage:SystemFsmStage:stageStatus managed\nobject property")
cucsStorageSystemFsmTaskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30))
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskTable.setDescription("Cisco UCS storage:SystemFsmTask managed object table")
cucsStorageSystemFsmTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmTaskInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskEntry.setDescription("Entry for the cucsStorageSystemFsmTaskTable table.")
cucsStorageSystemFsmTaskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageSystemFsmTaskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskDn.setDescription("Cisco UCS storage:SystemFsmTask:dn managed object property")
cucsStorageSystemFsmTaskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskRn.setDescription("Cisco UCS storage:SystemFsmTask:rn managed object property")
cucsStorageSystemFsmTaskCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 4), CucsFsmCompletion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskCompletion.setDescription("Cisco UCS storage:SystemFsmTask:completion managed\nobject property")
cucsStorageSystemFsmTaskFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 5), CucsFsmFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskFlags.setDescription("Cisco UCS storage:SystemFsmTask:flags managed object property")
cucsStorageSystemFsmTaskItem = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 6), CucsStorageSystemFsmTaskItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskItem.setDescription("Cisco UCS storage:SystemFsmTask:item managed object property")
cucsStorageSystemFsmTaskSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskSeqId.setDescription("Cisco UCS storage:SystemFsmTask:seqId managed object property")
cucsStorageVirtualDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31))
if mibBuilder.loadTexts: cucsStorageVirtualDriveTable.setDescription("Cisco UCS storage:VirtualDrive managed object table")
cucsStorageVirtualDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVirtualDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageVirtualDriveEntry.setDescription("Entry for the cucsStorageVirtualDriveTable table.")
cucsStorageVirtualDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageVirtualDriveInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageVirtualDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDn.setDescription("Cisco UCS storage:VirtualDrive:dn managed object property")
cucsStorageVirtualDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRn.setDescription("Cisco UCS storage:VirtualDrive:rn managed object property")
cucsStorageVirtualDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveBlockSize.setDescription("Cisco UCS storage:VirtualDrive:blockSize managed object property")
cucsStorageVirtualDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConnectionProtocol.setDescription("Cisco UCS storage:VirtualDrive:connectionProtocol\nmanaged object property")
cucsStorageVirtualDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveId.setDescription("Cisco UCS storage:VirtualDrive:id managed object property")
cucsStorageVirtualDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveModel.setDescription("Cisco UCS storage:VirtualDrive:model managed object property")
cucsStorageVirtualDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveNumberOfBlocks.setDescription("Cisco UCS storage:VirtualDrive:numberOfBlocks\nmanaged object property")
cucsStorageVirtualDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperQualifierReason.setDescription("Cisco UCS storage:VirtualDrive:operQualifierReason\nmanaged object property")
cucsStorageVirtualDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperability.setDescription("Cisco UCS storage:VirtualDrive:operability managed\nobject property")
cucsStorageVirtualDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDrivePresence.setDescription("Cisco UCS storage:VirtualDrive:presence managed object property")
cucsStorageVirtualDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRevision.setDescription("Cisco UCS storage:VirtualDrive:revision managed object property")
cucsStorageVirtualDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveSerial.setDescription("Cisco UCS storage:VirtualDrive:serial managed object property")
cucsStorageVirtualDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveSize.setDescription("Cisco UCS storage:VirtualDrive:size managed object property")
cucsStorageVirtualDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 15), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveType.setDescription("Cisco UCS storage:VirtualDrive:type managed object property")
cucsStorageVirtualDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveVendor.setDescription("Cisco UCS storage:VirtualDrive:vendor managed object property")
cucsStorageVirtualDriveAccessPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 17), CucsStorageAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAccessPolicy.setDescription("Cisco UCS storage:VirtualDrive:accessPolicy managed\nobject property")
cucsStorageVirtualDriveActualWriteCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 18), CucsStorageActualWriteType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveActualWriteCachePolicy.setDescription("Cisco UCS storage:VirtualDrive:actualWriteCachePolicy\nmanaged object property")
cucsStorageVirtualDriveBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 19), CucsStorageBootableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveBootable.setDescription("Cisco UCS storage:VirtualDrive:bootable managed object property")
cucsStorageVirtualDriveConfiguredWriteCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 20), CucsStorageConfiguredWriteType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfiguredWriteCachePolicy.setDescription("Cisco UCS storage:VirtualDrive:configuredWriteCachePolicy\nmanaged object property")
cucsStorageVirtualDriveDriveCache = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 21), CucsStorageCacheType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveCache.setDescription("Cisco UCS storage:VirtualDrive:driveCache managed\nobject property")
cucsStorageVirtualDriveDriveState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 22), CucsStorageVDriveState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveState.setDescription("Cisco UCS storage:VirtualDrive:driveState managed\nobject property")
cucsStorageVirtualDriveIoPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 23), CucsStorageIOType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveIoPolicy.setDescription("Cisco UCS storage:VirtualDrive:ioPolicy managed object property")
cucsStorageVirtualDriveLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 24), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveLc.setDescription("Cisco UCS storage:VirtualDrive:lc managed object property")
cucsStorageVirtualDriveReadPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 25), CucsStorageReadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveReadPolicy.setDescription("Cisco UCS storage:VirtualDrive:readPolicy managed\nobject property")
cucsStorageVirtualDriveStripSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 26), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveStripSize.setDescription("Cisco UCS storage:VirtualDrive:stripSize managed object property")
cucsStorageVsanRefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32))
if mibBuilder.loadTexts: cucsStorageVsanRefTable.setDescription("Cisco UCS storage:VsanRef managed object table")
cucsStorageVsanRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVsanRefInstanceId"))
if mibBuilder.loadTexts: cucsStorageVsanRefEntry.setDescription("Entry for the cucsStorageVsanRefTable table.")
cucsStorageVsanRefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageVsanRefInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageVsanRefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefDn.setDescription("Cisco UCS storage:VsanRef:dn managed object property")
cucsStorageVsanRefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefRn.setDescription("Cisco UCS storage:VsanRef:rn managed object property")
cucsStorageVsanRefConfigQualifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 4), CucsVnicConfigIssues()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefConfigQualifier.setDescription("Cisco UCS storage:VsanRef:configQualifier managed\nobject property")
cucsStorageVsanRefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefName.setDescription("Cisco UCS storage:VsanRef:name managed object property")
cucsStorageVsanRefOperVnetDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetDn.setDescription("Cisco UCS storage:VsanRef:operVnetDn managed object property")
cucsStorageVsanRefOperVnetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetName.setDescription("Cisco UCS storage:VsanRef:operVnetName managed object property")
cucsStorageVsanRefSwitchId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 8), CucsStorageVsanRefSwitchId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefSwitchId.setDescription("Cisco UCS storage:VsanRef:switchId managed object property")
cucsStorageVsanRefVnet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefVnet.setDescription("Cisco UCS storage:VsanRef:vnet managed object property")
cucsStorageVsanRefZoningState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 10), CucsFabricZoningState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefZoningState.setDescription("Cisco UCS storage:VsanRef:zoningState managed object property")
cucsStorageTransportableFlashModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33))
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleTable.setDescription("Cisco UCS storage:TransportableFlashModule managed object table")
cucsStorageTransportableFlashModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageTransportableFlashModuleInstanceId"))
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleEntry.setDescription("Entry for the cucsStorageTransportableFlashModuleTable table.")
cucsStorageTransportableFlashModuleInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageTransportableFlashModuleDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleDn.setDescription("Cisco UCS storage:TransportableFlashModule:dn\nmanaged object property")
cucsStorageTransportableFlashModuleRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRn.setDescription("Cisco UCS storage:TransportableFlashModule:rn\nmanaged object property")
cucsStorageTransportableFlashModuleBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleBlockSize.setDescription("Cisco UCS storage:TransportableFlashModule:blockSize\nmanaged object property")
cucsStorageTransportableFlashModuleConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleConnectionProtocol.setDescription("Cisco UCS storage:TransportableFlashModule:connectionProtocol\nmanaged object property")
cucsStorageTransportableFlashModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleId.setDescription("Cisco UCS storage:TransportableFlashModule:id\nmanaged object property")
cucsStorageTransportableFlashModuleModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleModel.setDescription("Cisco UCS storage:TransportableFlashModule:model\nmanaged object property")
cucsStorageTransportableFlashModuleNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleNumberOfBlocks.setDescription("Cisco UCS storage:TransportableFlashModule:numberOfBlocks\nmanaged object property")
cucsStorageTransportableFlashModuleOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperQualifierReason.setDescription("Cisco UCS storage:TransportableFlashModule:operQualifierReason\nmanaged object property")
cucsStorageTransportableFlashModuleOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperability.setDescription("Cisco UCS storage:TransportableFlashModule:operability\nmanaged object property")
cucsStorageTransportableFlashModulePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModulePresence.setDescription("Cisco UCS storage:TransportableFlashModule:presence\nmanaged object property")
cucsStorageTransportableFlashModuleRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRevision.setDescription("Cisco UCS storage:TransportableFlashModule:revision\nmanaged object property")
cucsStorageTransportableFlashModuleSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSerial.setDescription("Cisco UCS storage:TransportableFlashModule:serial\nmanaged object property")
cucsStorageTransportableFlashModuleSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSize.setDescription("Cisco UCS storage:TransportableFlashModule:size\nmanaged object property")
cucsStorageTransportableFlashModuleVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleVendor.setDescription("Cisco UCS storage:TransportableFlashModule:vendor\nmanaged object property")
cucsStorageFlexFlashCardTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34))
if mibBuilder.loadTexts: cucsStorageFlexFlashCardTable.setDescription("Cisco UCS storage:FlexFlashCard managed object table")
cucsStorageFlexFlashCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashCardInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashCardEntry.setDescription("Entry for the cucsStorageFlexFlashCardTable table.")
cucsStorageFlexFlashCardInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashCardDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDn.setDescription("Cisco UCS storage:FlexFlashCard:dn managed object property")
cucsStorageFlexFlashCardRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRn.setDescription("Cisco UCS storage:FlexFlashCard:rn managed object property")
cucsStorageFlexFlashCardBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardBlockSize.setDescription("Cisco UCS storage:FlexFlashCard:blockSize managed\nobject property")
cucsStorageFlexFlashCardCardHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 5), CucsStorageFFCardHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardHealth.setDescription("Cisco UCS storage:FlexFlashCard:cardHealth managed\nobject property")
cucsStorageFlexFlashCardCardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 6), CucsStorageFFCardMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardMode.setDescription("Cisco UCS storage:FlexFlashCard:cardMode managed object property")
cucsStorageFlexFlashCardCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardType.setDescription("Cisco UCS storage:FlexFlashCard:cardType managed object property")
cucsStorageFlexFlashCardConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 8), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardConnectionProtocol.setDescription("Cisco UCS storage:FlexFlashCard:connectionProtocol\nmanaged object property")
cucsStorageFlexFlashCardControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardControllerIndex.setDescription("Cisco UCS storage:FlexFlashCard:controllerIndex\nmanaged object property")
cucsStorageFlexFlashCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardId.setDescription("Cisco UCS storage:FlexFlashCard:id managed object property")
cucsStorageFlexFlashCardMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgDate.setDescription("Cisco UCS storage:FlexFlashCard:mfgDate managed object property")
cucsStorageFlexFlashCardMfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgId.setDescription("Cisco UCS storage:FlexFlashCard:mfgId managed object property")
cucsStorageFlexFlashCardModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardModel.setDescription("Cisco UCS storage:FlexFlashCard:model managed object property")
cucsStorageFlexFlashCardNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardNumberOfBlocks.setDescription("Cisco UCS storage:FlexFlashCard:numberOfBlocks\nmanaged object property")
cucsStorageFlexFlashCardOemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOemId.setDescription("Cisco UCS storage:FlexFlashCard:oemId managed object property")
cucsStorageFlexFlashCardOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperQualifierReason.setDescription("Cisco UCS storage:FlexFlashCard:operQualifierReason\nmanaged object property")
cucsStorageFlexFlashCardOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 17), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperability.setDescription("Cisco UCS storage:FlexFlashCard:operability managed\nobject property")
cucsStorageFlexFlashCardPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 18), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPresence.setDescription("Cisco UCS storage:FlexFlashCard:presence managed object property")
cucsStorageFlexFlashCardReadIOErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadIOErrorCount.setDescription("Cisco UCS storage:FlexFlashCard:readIOErrorCount\nmanaged object property")
cucsStorageFlexFlashCardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 20), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRevision.setDescription("Cisco UCS storage:FlexFlashCard:revision managed object property")
cucsStorageFlexFlashCardSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSerial.setDescription("Cisco UCS storage:FlexFlashCard:serial managed object property")
cucsStorageFlexFlashCardSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 22), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSize.setDescription("Cisco UCS storage:FlexFlashCard:size managed object property")
cucsStorageFlexFlashCardSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSlotNumber.setDescription("Cisco UCS storage:FlexFlashCard:slotNumber managed\nobject property")
cucsStorageFlexFlashCardVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 24), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardVendor.setDescription("Cisco UCS storage:FlexFlashCard:vendor managed object property")
cucsStorageFlexFlashCardWriteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 25), CucsStorageFFCardWriteEnable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteEnable.setDescription("Cisco UCS storage:FlexFlashCard:writeEnable managed\nobject property")
cucsStorageFlexFlashCardWriteIOErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteIOErrorCount.setDescription("Cisco UCS storage:FlexFlashCard:writeIOErrorCount\nmanaged object property")
cucsStorageFlexFlashCardCardState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 27), CucsStorageFFCardState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardState.setDescription("Cisco UCS storage:FlexFlashCard:cardState managed\nobject property")
cucsStorageFlexFlashCardCardSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 28), CucsStorageFFCardSync()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardSync.setDescription("Cisco UCS storage:FlexFlashCard:cardSync managed object property")
cucsStorageFlexFlashCardDrivesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDrivesEnabled.setDescription("Cisco UCS storage:FlexFlashCard:drivesEnabled\nmanaged object property")
cucsStorageFlexFlashCardPartitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPartitionCount.setDescription("Cisco UCS storage:FlexFlashCard:partitionCount\nmanaged object property")
cucsStorageFlexFlashCardReadErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadErrorThreshold.setDescription("Cisco UCS storage:FlexFlashCard:readErrorThreshold\nmanaged object property")
cucsStorageFlexFlashCardSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSignature.setDescription("Cisco UCS storage:FlexFlashCard:signature managed\nobject property")
cucsStorageFlexFlashCardWriteErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteErrorThreshold.setDescription("Cisco UCS storage:FlexFlashCard:writeErrorThreshold\nmanaged object property")
cucsStorageFlexFlashControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerTable.setDescription("Cisco UCS storage:FlexFlashController managed object table")
cucsStorageFlexFlashControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerEntry.setDescription("Entry for the cucsStorageFlexFlashControllerTable table.")
cucsStorageFlexFlashControllerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashControllerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerDn.setDescription("Cisco UCS storage:FlexFlashController:dn managed object property")
cucsStorageFlexFlashControllerRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRn.setDescription("Cisco UCS storage:FlexFlashController:rn managed object property")
cucsStorageFlexFlashControllerControllerHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 4), CucsStorageFFControllerHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerHealth.setDescription("Cisco UCS storage:FlexFlashController:controllerHealth\nmanaged object property")
cucsStorageFlexFlashControllerControllerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 5), CucsStorageFFControllerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerState.setDescription("Cisco UCS storage:FlexFlashController:controllerState\nmanaged object property")
cucsStorageFlexFlashControllerFlexFlashType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 6), CucsStorageFFType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFlexFlashType.setDescription("Cisco UCS storage:FlexFlashController:flexFlashType\nmanaged object property")
cucsStorageFlexFlashControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 7), CucsStorageFlexFlashControllerId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerId.setDescription("Cisco UCS storage:FlexFlashController:id managed object property")
cucsStorageFlexFlashControllerModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerModel.setDescription("Cisco UCS storage:FlexFlashController:model managed\nobject property")
cucsStorageFlexFlashControllerOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperQualifierReason.setDescription("Cisco UCS storage:FlexFlashController:operQualifierReason\nmanaged object property")
cucsStorageFlexFlashControllerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperState.setDescription("Cisco UCS storage:FlexFlashController:operState\nmanaged object property")
cucsStorageFlexFlashControllerOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 11), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperability.setDescription("Cisco UCS storage:FlexFlashController:operability\nmanaged object property")
cucsStorageFlexFlashControllerPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciAddr.setDescription("Cisco UCS storage:FlexFlashController:pciAddr\nmanaged object property")
cucsStorageFlexFlashControllerPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciSlot.setDescription("Cisco UCS storage:FlexFlashController:pciSlot\nmanaged object property")
cucsStorageFlexFlashControllerPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 14), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPerf.setDescription("Cisco UCS storage:FlexFlashController:perf managed\nobject property")
cucsStorageFlexFlashControllerPhysicalDriveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPhysicalDriveCount.setDescription("Cisco UCS storage:FlexFlashController:physicalDriveCount\nmanaged object property")
cucsStorageFlexFlashControllerPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 16), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPower.setDescription("Cisco UCS storage:FlexFlashController:power managed\nobject property")
cucsStorageFlexFlashControllerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 17), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPresence.setDescription("Cisco UCS storage:FlexFlashController:presence\nmanaged object property")
cucsStorageFlexFlashControllerPrimarySlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPrimarySlotNumber.setDescription("Cisco UCS storage:FlexFlashController:primarySlotNumber\nmanaged object property")
cucsStorageFlexFlashControllerRaidSyncSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 19), CucsStorageFFRaidSyncSupport()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRaidSyncSupport.setDescription("Cisco UCS storage:FlexFlashController:raidSyncSupport\nmanaged object property")
cucsStorageFlexFlashControllerReadErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerReadErrorThreshold.setDescription("Cisco UCS storage:FlexFlashController:readErrorThreshold\nmanaged object property")
cucsStorageFlexFlashControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRevision.setDescription("Cisco UCS storage:FlexFlashController:revision\nmanaged object property")
cucsStorageFlexFlashControllerSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 22), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerSerial.setDescription("Cisco UCS storage:FlexFlashController:serial managed\nobject property")
cucsStorageFlexFlashControllerThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 23), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerThermal.setDescription("Cisco UCS storage:FlexFlashController:thermal\nmanaged object property")
cucsStorageFlexFlashControllerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 24), CucsStorageControllerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerType.setDescription("Cisco UCS storage:FlexFlashController:type managed\nobject property")
cucsStorageFlexFlashControllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 25), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVendor.setDescription("Cisco UCS storage:FlexFlashController:vendor managed\nobject property")
cucsStorageFlexFlashControllerVirtualDriveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVirtualDriveCount.setDescription("Cisco UCS storage:FlexFlashController:virtualDriveCount\nmanaged object property")
cucsStorageFlexFlashControllerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 27), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVoltage.setDescription("Cisco UCS storage:FlexFlashController:voltage\nmanaged object property")
cucsStorageFlexFlashControllerWriteErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerWriteErrorThreshold.setDescription("Cisco UCS storage:FlexFlashController:writeErrorThreshold\nmanaged object property")
cucsStorageFlexFlashControllerAdminSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 29), CucsStorageFFSlotENUM()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerAdminSlotNumber.setDescription("Cisco UCS storage:FlexFlashController:adminSlotNumber\nmanaged object property")
cucsStorageFlexFlashControllerConfiguredMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 30), CucsStorageOperatingModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerConfiguredMode.setDescription("Cisco UCS storage:FlexFlashController:configuredMode\nmanaged object property")
cucsStorageFlexFlashControllerFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFirmwareVersion.setDescription("Cisco UCS storage:FlexFlashController:firmwareVersion\nmanaged object property")
cucsStorageFlexFlashControllerFsmFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 33), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmFlags.setDescription("Cisco UCS storage:FlexFlashController:fsmFlags\nmanaged object property")
cucsStorageFlexFlashControllerFsmPrev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 34), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmPrev.setDescription("Cisco UCS storage:FlexFlashController:fsmPrev\nmanaged object property")
cucsStorageFlexFlashControllerFsmProgr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgr.setDescription("Cisco UCS storage:FlexFlashController:fsmProgr\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtInvErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrCode.setDescription("Cisco UCS storage:FlexFlashController:fsmRmtInvErrCode\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtInvErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 37), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrDescr.setDescription("Cisco UCS storage:FlexFlashController:fsmRmtInvErrDescr\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtInvRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 38), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvRslt.setDescription("Cisco UCS storage:FlexFlashController:fsmRmtInvRslt\nmanaged object property")
cucsStorageFlexFlashControllerFsmStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 40), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStamp.setDescription("Cisco UCS storage:FlexFlashController:fsmStamp\nmanaged object property")
cucsStorageFlexFlashControllerFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 41), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStatus.setDescription("Cisco UCS storage:FlexFlashController:fsmStatus\nmanaged object property")
cucsStorageFlexFlashControllerFsmTry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTry.setDescription("Cisco UCS storage:FlexFlashController:fsmTry managed\nobject property")
cucsStorageFlexFlashControllerHasError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 43), CucsStorageFFHasError()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerHasError.setDescription("Cisco UCS storage:FlexFlashController:hasError\nmanaged object property")
cucsStorageFlexFlashControllerLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 44), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerLocationDn.setDescription("Cisco UCS storage:FlexFlashController:locationDn\nmanaged object property")
cucsStorageFlexFlashControllerOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 45), CucsStorageOperatingModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperatingMode.setDescription("Cisco UCS storage:FlexFlashController:operatingMode\nmanaged object property")
cucsStorageFlexFlashControllerOperationRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 46), CucsStorageOperationRequestType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperationRequest.setDescription("Cisco UCS storage:FlexFlashController:operationRequest\nmanaged object property")
cucsStorageFlexFlashDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36))
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveTable.setDescription("Cisco UCS storage:FlexFlashDrive managed object table")
cucsStorageFlexFlashDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveEntry.setDescription("Entry for the cucsStorageFlexFlashDriveTable table.")
cucsStorageFlexFlashDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDn.setDescription("Cisco UCS storage:FlexFlashDrive:dn managed object property")
cucsStorageFlexFlashDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRn.setDescription("Cisco UCS storage:FlexFlashDrive:rn managed object property")
cucsStorageFlexFlashDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveBlockSize.setDescription("Cisco UCS storage:FlexFlashDrive:blockSize managed\nobject property")
cucsStorageFlexFlashDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveConnectionProtocol.setDescription("Cisco UCS storage:FlexFlashDrive:connectionProtocol\nmanaged object property")
cucsStorageFlexFlashDriveControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveControllerIndex.setDescription("Cisco UCS storage:FlexFlashDrive:controllerIndex\nmanaged object property")
cucsStorageFlexFlashDriveDriveState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 7), CucsStorageFFDriveState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveState.setDescription("Cisco UCS storage:FlexFlashDrive:driveState managed\nobject property")
cucsStorageFlexFlashDriveDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 8), CucsStorageFFDriveType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveType.setDescription("Cisco UCS storage:FlexFlashDrive:driveType managed\nobject property")
cucsStorageFlexFlashDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveId.setDescription("Cisco UCS storage:FlexFlashDrive:id managed object property")
cucsStorageFlexFlashDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveModel.setDescription("Cisco UCS storage:FlexFlashDrive:model managed object property")
cucsStorageFlexFlashDriveName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveName.setDescription("Cisco UCS storage:FlexFlashDrive:name managed object property")
cucsStorageFlexFlashDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 12), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveNumberOfBlocks.setDescription("Cisco UCS storage:FlexFlashDrive:numberOfBlocks\nmanaged object property")
cucsStorageFlexFlashDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperQualifierReason.setDescription("Cisco UCS storage:FlexFlashDrive:operQualifierReason\nmanaged object property")
cucsStorageFlexFlashDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 14), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperability.setDescription("Cisco UCS storage:FlexFlashDrive:operability managed\nobject property")
cucsStorageFlexFlashDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 15), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDrivePresence.setDescription("Cisco UCS storage:FlexFlashDrive:presence managed\nobject property")
cucsStorageFlexFlashDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRevision.setDescription("Cisco UCS storage:FlexFlashDrive:revision managed\nobject property")
cucsStorageFlexFlashDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSerial.setDescription("Cisco UCS storage:FlexFlashDrive:serial managed object property")
cucsStorageFlexFlashDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 18), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSize.setDescription("Cisco UCS storage:FlexFlashDrive:size managed object property")
cucsStorageFlexFlashDriveSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSlotNumber.setDescription("Cisco UCS storage:FlexFlashDrive:slotNumber managed\nobject property")
cucsStorageFlexFlashDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 20), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVendor.setDescription("Cisco UCS storage:FlexFlashDrive:vendor managed object property")
cucsStorageFlexFlashDriveVisible = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 21), CucsStorageFFDriveVisible()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVisible.setDescription("Cisco UCS storage:FlexFlashDrive:visible managed object property")
cucsStorageFlexFlashDriveRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 22), CucsStorageFFDriveRemovable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRemovable.setDescription("Cisco UCS storage:FlexFlashDrive:removable managed\nobject property")
cucsStorageFlexFlashDriveRWType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 23), CucsStorageFFRWType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRWType.setDescription("Cisco UCS storage:FlexFlashDrive:RWType managed object property")
cucsStorageFlexFlashDriveLastOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 24), CucsStorageOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveLastOperation.setDescription("Cisco UCS storage:FlexFlashDrive:lastOperation\nmanaged object property")
cucsStorageFlexFlashDriveOperationState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 25), CucsStorageOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperationState.setDescription("Cisco UCS storage:FlexFlashDrive:operationState\nmanaged object property")
cucsStorageFlexFlashVirtualDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37))
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveTable.setDescription("Cisco UCS storage:FlexFlashVirtualDrive managed object table")
cucsStorageFlexFlashVirtualDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashVirtualDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveEntry.setDescription("Entry for the cucsStorageFlexFlashVirtualDriveTable table.")
cucsStorageFlexFlashVirtualDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashVirtualDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveDn.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:dn managed\nobject property")
cucsStorageFlexFlashVirtualDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRn.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:rn managed\nobject property")
cucsStorageFlexFlashVirtualDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveBlockSize.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:blockSize\nmanaged object property")
cucsStorageFlexFlashVirtualDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveConnectionProtocol.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:connectionProtocol\nmanaged object property")
cucsStorageFlexFlashVirtualDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveId.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:id managed\nobject property")
cucsStorageFlexFlashVirtualDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveModel.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:model\nmanaged object property")
cucsStorageFlexFlashVirtualDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveNumberOfBlocks.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:numberOfBlocks\nmanaged object property")
cucsStorageFlexFlashVirtualDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperQualifierReason.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:operQualifierReason\nmanaged object property")
cucsStorageFlexFlashVirtualDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperability.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:operability\nmanaged object property")
cucsStorageFlexFlashVirtualDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDrivePresence.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:presence\nmanaged object property")
cucsStorageFlexFlashVirtualDriveRaidHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 12), CucsStorageFFRAIDHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidHealth.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:raidHealth\nmanaged object property")
cucsStorageFlexFlashVirtualDriveRaidState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 13), CucsStorageFFRAIDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidState.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:raidState\nmanaged object property")
cucsStorageFlexFlashVirtualDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRevision.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:revision\nmanaged object property")
cucsStorageFlexFlashVirtualDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSerial.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:serial\nmanaged object property")
cucsStorageFlexFlashVirtualDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 16), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSize.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:size managed\nobject property")
cucsStorageFlexFlashVirtualDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 17), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveType.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:type managed\nobject property")
cucsStorageFlexFlashVirtualDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveVendor.setDescription("Cisco UCS storage:FlexFlashVirtualDrive:vendor\nmanaged object property")
cucsStorageOperationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38))
if mibBuilder.loadTexts: cucsStorageOperationTable.setDescription("Cisco UCS storage:Operation managed object table")
cucsStorageOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageOperationInstanceId"))
if mibBuilder.loadTexts: cucsStorageOperationEntry.setDescription("Entry for the cucsStorageOperationTable table.")
cucsStorageOperationInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageOperationInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageOperationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationDn.setDescription("Cisco UCS storage:Operation:dn managed object property")
cucsStorageOperationRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationRn.setDescription("Cisco UCS storage:Operation:rn managed object property")
cucsStorageOperationEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationEndTime.setDescription("Cisco UCS storage:Operation:endTime managed object property")
cucsStorageOperationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 5), CucsStorageOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationName.setDescription("Cisco UCS storage:Operation:name managed object property")
cucsStorageOperationOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 6), CucsStorageOperationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationOperState.setDescription("Cisco UCS storage:Operation:operState managed object property")
cucsStorageOperationProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationProgress.setDescription("Cisco UCS storage:Operation:progress managed object property")
cucsStorageOperationStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationStartTime.setDescription("Cisco UCS storage:Operation:startTime managed object property")
cucsStorageOperationStatusDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationStatusDescr.setDescription("Cisco UCS storage:Operation:statusDescr managed object property")
cucsStorageFlexFlashControllerFsmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTable.setDescription("Cisco UCS storage:FlexFlashControllerFsm managed object table")
cucsStorageFlexFlashControllerFsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmEntry.setDescription("Entry for the cucsStorageFlexFlashControllerFsmTable table.")
cucsStorageFlexFlashControllerFsmInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashControllerFsmDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDn.setDescription("Cisco UCS storage:FlexFlashControllerFsm:dn managed\nobject property")
cucsStorageFlexFlashControllerFsmRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRn.setDescription("Cisco UCS storage:FlexFlashControllerFsm:rn managed\nobject property")
cucsStorageFlexFlashControllerFsmCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCompletionTime.setDescription("Cisco UCS storage:FlexFlashControllerFsm:completionTime\nmanaged object property")
cucsStorageFlexFlashControllerFsmCurrentFsm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 5), CucsStorageFlexFlashControllerFsmCurrentFsm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCurrentFsm.setDescription("Cisco UCS storage:FlexFlashControllerFsm:currentFsm\nmanaged object property")
cucsStorageFlexFlashControllerFsmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDescr.setDescription("Cisco UCS storage:FlexFlashControllerFsm:descr\nmanaged object property")
cucsStorageFlexFlashControllerFsmFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 7), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmFsmStatus.setDescription("Cisco UCS storage:FlexFlashControllerFsm:fsmStatus\nmanaged object property")
cucsStorageFlexFlashControllerFsmProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgress.setDescription("Cisco UCS storage:FlexFlashControllerFsm:progress\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrCode.setDescription("Cisco UCS storage:FlexFlashControllerFsm:rmtErrCode\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrDescr.setDescription("Cisco UCS storage:FlexFlashControllerFsm:rmtErrDescr\nmanaged object property")
cucsStorageFlexFlashControllerFsmRmtRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 11), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtRslt.setDescription("Cisco UCS storage:FlexFlashControllerFsm:rmtRslt\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageTable.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage\nmanaged object table")
cucsStorageFlexFlashControllerFsmStageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmStageInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageEntry.setDescription("Entry for the cucsStorageFlexFlashControllerFsmStageTable table.")
cucsStorageFlexFlashControllerFsmStageInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashControllerFsmStageDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDn.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:dn\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRn.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:rn\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDescr.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:descr\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageLastUpdateTime.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:lastUpdateTime\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 6), CucsStorageFlexFlashControllerFsmStageName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageName.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:name\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageOrder.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:order\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRetry.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:retry\nmanaged object property")
cucsStorageFlexFlashControllerFsmStageStageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 9), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageStageStatus.setDescription("Cisco UCS storage:FlexFlashControllerFsmStage:stageStatus\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskTable.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask managed\nobject table")
cucsStorageFlexFlashControllerFsmTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmTaskInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskEntry.setDescription("Entry for the cucsStorageFlexFlashControllerFsmTaskTable table.")
cucsStorageFlexFlashControllerFsmTaskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageFlexFlashControllerFsmTaskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskDn.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:dn\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskRn.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:rn\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 4), CucsFsmCompletion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskCompletion.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:completion\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 5), CucsStorageFlexFlashControllerFsmTaskFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskFlags.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:flags\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskItem = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 6), CucsStorageFlexFlashControllerFsmTaskItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskItem.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:item\nmanaged object property")
cucsStorageFlexFlashControllerFsmTaskSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskSeqId.setDescription("Cisco UCS storage:FlexFlashControllerFsmTask:seqId\nmanaged object property")
cucsStorageMezzFlashLifeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42))
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeTable.setDescription("Cisco UCS storage:MezzFlashLife managed object table")
cucsStorageMezzFlashLifeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1)).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageMezzFlashLifeInstanceId"))
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeEntry.setDescription("Entry for the cucsStorageMezzFlashLifeTable table.")
cucsStorageMezzFlashLifeInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 1), CucsManagedObjectId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeInstanceId.setDescription("Instance identifier of the managed object.")
cucsStorageMezzFlashLifeDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeDn.setDescription("Cisco UCS storage:MezzFlashLife:dn managed object property")
cucsStorageMezzFlashLifeRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRn.setDescription("Cisco UCS storage:MezzFlashLife:rn managed object property")
cucsStorageMezzFlashLifeBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeBlockSize.setDescription("Cisco UCS storage:MezzFlashLife:blockSize managed\nobject property")
cucsStorageMezzFlashLifeConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeConnectionProtocol.setDescription("Cisco UCS storage:MezzFlashLife:connectionProtocol\nmanaged object property")
cucsStorageMezzFlashLifeFlashPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashPercentage.setDescription("Cisco UCS storage:MezzFlashLife:flashPercentage\nmanaged object property")
cucsStorageMezzFlashLifeFlashStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashStatus.setDescription("Cisco UCS storage:MezzFlashLife:flashStatus managed\nobject property")
cucsStorageMezzFlashLifeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeId.setDescription("Cisco UCS storage:MezzFlashLife:id managed object property")
cucsStorageMezzFlashLifeModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeModel.setDescription("Cisco UCS storage:MezzFlashLife:model managed object property")
cucsStorageMezzFlashLifeNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 10), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeNumberOfBlocks.setDescription("Cisco UCS storage:MezzFlashLife:numberOfBlocks\nmanaged object property")
cucsStorageMezzFlashLifeOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperQualifierReason.setDescription("Cisco UCS storage:MezzFlashLife:operQualifierReason\nmanaged object property")
cucsStorageMezzFlashLifeOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 12), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperability.setDescription("Cisco UCS storage:MezzFlashLife:operability managed\nobject property")
cucsStorageMezzFlashLifePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 13), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifePresence.setDescription("Cisco UCS storage:MezzFlashLife:presence managed object property")
cucsStorageMezzFlashLifeRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRevision.setDescription("Cisco UCS storage:MezzFlashLife:revision managed object property")
cucsStorageMezzFlashLifeSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSerial.setDescription("Cisco UCS storage:MezzFlashLife:serial managed object property")
cucsStorageMezzFlashLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 16), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSize.setDescription("Cisco UCS storage:MezzFlashLife:size managed object property")
cucsStorageMezzFlashLifeVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeVendor.setDescription("Cisco UCS storage:MezzFlashLife:vendor managed object property")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", PYSNMP_MODULE_ID=cucsStorageObjects)

# Objects
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageObjects=cucsStorageObjects, cucsStorageControllerTable=cucsStorageControllerTable, cucsStorageControllerEntry=cucsStorageControllerEntry, cucsStorageControllerInstanceId=cucsStorageControllerInstanceId, cucsStorageControllerDn=cucsStorageControllerDn, cucsStorageControllerRn=cucsStorageControllerRn, cucsStorageControllerId=cucsStorageControllerId, cucsStorageControllerModel=cucsStorageControllerModel, cucsStorageControllerOperState=cucsStorageControllerOperState, cucsStorageControllerOperability=cucsStorageControllerOperability, cucsStorageControllerPciAddr=cucsStorageControllerPciAddr, cucsStorageControllerPciSlot=cucsStorageControllerPciSlot, cucsStorageControllerPerf=cucsStorageControllerPerf, cucsStorageControllerPower=cucsStorageControllerPower, cucsStorageControllerPresence=cucsStorageControllerPresence, cucsStorageControllerRevision=cucsStorageControllerRevision, cucsStorageControllerSerial=cucsStorageControllerSerial, cucsStorageControllerThermal=cucsStorageControllerThermal, cucsStorageControllerType=cucsStorageControllerType, cucsStorageControllerVendor=cucsStorageControllerVendor, cucsStorageControllerVoltage=cucsStorageControllerVoltage, cucsStorageControllerRaidSupport=cucsStorageControllerRaidSupport, cucsStorageControllerFaultMonitoring=cucsStorageControllerFaultMonitoring, cucsStorageControllerHwRevision=cucsStorageControllerHwRevision, cucsStorageControllerDeviceRaidSupport=cucsStorageControllerDeviceRaidSupport, cucsStorageControllerOperQualifierReason=cucsStorageControllerOperQualifierReason, cucsStorageControllerControllerStatus=cucsStorageControllerControllerStatus, cucsStorageControllerLc=cucsStorageControllerLc, cucsStorageControllerOobControllerId=cucsStorageControllerOobControllerId, cucsStorageControllerOobInterfaceSupported=cucsStorageControllerOobInterfaceSupported, cucsStorageControllerRebuildRate=cucsStorageControllerRebuildRate, cucsStorageControllerLocationDn=cucsStorageControllerLocationDn, cucsStorageControllerPartNumber=cucsStorageControllerPartNumber, cucsStorageControllerVid=cucsStorageControllerVid, cucsStorageDriveTable=cucsStorageDriveTable, cucsStorageDriveEntry=cucsStorageDriveEntry, cucsStorageDriveInstanceId=cucsStorageDriveInstanceId, cucsStorageDriveDn=cucsStorageDriveDn, cucsStorageDriveRn=cucsStorageDriveRn, cucsStorageDriveId=cucsStorageDriveId, cucsStorageDriveModel=cucsStorageDriveModel, cucsStorageDrivePciAddr=cucsStorageDrivePciAddr, cucsStorageDriveRevision=cucsStorageDriveRevision, cucsStorageDriveSerial=cucsStorageDriveSerial, cucsStorageDriveVendor=cucsStorageDriveVendor, cucsStorageItemTable=cucsStorageItemTable, cucsStorageItemEntry=cucsStorageItemEntry, cucsStorageItemInstanceId=cucsStorageItemInstanceId, cucsStorageItemDn=cucsStorageItemDn, cucsStorageItemRn=cucsStorageItemRn, cucsStorageItemName=cucsStorageItemName, cucsStorageItemSize=cucsStorageItemSize, cucsStorageItemUsed=cucsStorageItemUsed, cucsStorageItemOperState=cucsStorageItemOperState, cucsStorageLocalDiskTable=cucsStorageLocalDiskTable, cucsStorageLocalDiskEntry=cucsStorageLocalDiskEntry, cucsStorageLocalDiskInstanceId=cucsStorageLocalDiskInstanceId, cucsStorageLocalDiskDn=cucsStorageLocalDiskDn, cucsStorageLocalDiskRn=cucsStorageLocalDiskRn, cucsStorageLocalDiskBlockSize=cucsStorageLocalDiskBlockSize, cucsStorageLocalDiskConnectionProtocol=cucsStorageLocalDiskConnectionProtocol, cucsStorageLocalDiskId=cucsStorageLocalDiskId, cucsStorageLocalDiskModel=cucsStorageLocalDiskModel, cucsStorageLocalDiskNumberOfBlocks=cucsStorageLocalDiskNumberOfBlocks, cucsStorageLocalDiskOperability=cucsStorageLocalDiskOperability, cucsStorageLocalDiskPresence=cucsStorageLocalDiskPresence, cucsStorageLocalDiskRevision=cucsStorageLocalDiskRevision, cucsStorageLocalDiskSerial=cucsStorageLocalDiskSerial, cucsStorageLocalDiskSize=cucsStorageLocalDiskSize, cucsStorageLocalDiskVendor=cucsStorageLocalDiskVendor, cucsStorageLocalDiskLc=cucsStorageLocalDiskLc, cucsStorageLocalDiskOperQualifierReason=cucsStorageLocalDiskOperQualifierReason, cucsStorageLocalDiskDeviceType=cucsStorageLocalDiskDeviceType, cucsStorageLocalDiskDiskState=cucsStorageLocalDiskDiskState, cucsStorageLocalDiskLinkSpeed=cucsStorageLocalDiskLinkSpeed, cucsStorageLocalDiskPowerState=cucsStorageLocalDiskPowerState, cucsStorageLocalDiskConfigDefTable=cucsStorageLocalDiskConfigDefTable, cucsStorageLocalDiskConfigDefEntry=cucsStorageLocalDiskConfigDefEntry, cucsStorageLocalDiskConfigDefInstanceId=cucsStorageLocalDiskConfigDefInstanceId, cucsStorageLocalDiskConfigDefDn=cucsStorageLocalDiskConfigDefDn, cucsStorageLocalDiskConfigDefRn=cucsStorageLocalDiskConfigDefRn, cucsStorageLocalDiskConfigDefDescr=cucsStorageLocalDiskConfigDefDescr, cucsStorageLocalDiskConfigDefIntId=cucsStorageLocalDiskConfigDefIntId, cucsStorageLocalDiskConfigDefMode=cucsStorageLocalDiskConfigDefMode, cucsStorageLocalDiskConfigDefName=cucsStorageLocalDiskConfigDefName, cucsStorageLocalDiskConfigDefProtectConfig=cucsStorageLocalDiskConfigDefProtectConfig, cucsStorageLocalDiskConfigDefPolicyLevel=cucsStorageLocalDiskConfigDefPolicyLevel, cucsStorageLocalDiskConfigDefPolicyOwner=cucsStorageLocalDiskConfigDefPolicyOwner, cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState=cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState, cucsStorageLocalDiskConfigDefFlexFlashState=cucsStorageLocalDiskConfigDefFlexFlashState, cucsStorageLocalDiskConfigPolicyTable=cucsStorageLocalDiskConfigPolicyTable, cucsStorageLocalDiskConfigPolicyEntry=cucsStorageLocalDiskConfigPolicyEntry, cucsStorageLocalDiskConfigPolicyInstanceId=cucsStorageLocalDiskConfigPolicyInstanceId, cucsStorageLocalDiskConfigPolicyDn=cucsStorageLocalDiskConfigPolicyDn, cucsStorageLocalDiskConfigPolicyRn=cucsStorageLocalDiskConfigPolicyRn, cucsStorageLocalDiskConfigPolicyDescr=cucsStorageLocalDiskConfigPolicyDescr, cucsStorageLocalDiskConfigPolicyIntId=cucsStorageLocalDiskConfigPolicyIntId, cucsStorageLocalDiskConfigPolicyMode=cucsStorageLocalDiskConfigPolicyMode, cucsStorageLocalDiskConfigPolicyName=cucsStorageLocalDiskConfigPolicyName, cucsStorageLocalDiskConfigPolicyProtectConfig=cucsStorageLocalDiskConfigPolicyProtectConfig, cucsStorageLocalDiskConfigPolicyPolicyLevel=cucsStorageLocalDiskConfigPolicyPolicyLevel, cucsStorageLocalDiskConfigPolicyPolicyOwner=cucsStorageLocalDiskConfigPolicyPolicyOwner, cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState=cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState, cucsStorageLocalDiskConfigPolicyFlexFlashState=cucsStorageLocalDiskConfigPolicyFlexFlashState, cucsStorageLocalDiskPartitionTable=cucsStorageLocalDiskPartitionTable, cucsStorageLocalDiskPartitionEntry=cucsStorageLocalDiskPartitionEntry, cucsStorageLocalDiskPartitionInstanceId=cucsStorageLocalDiskPartitionInstanceId, cucsStorageLocalDiskPartitionDn=cucsStorageLocalDiskPartitionDn, cucsStorageLocalDiskPartitionRn=cucsStorageLocalDiskPartitionRn, cucsStorageLocalDiskPartitionDescr=cucsStorageLocalDiskPartitionDescr, cucsStorageLocalDiskPartitionIntId=cucsStorageLocalDiskPartitionIntId, cucsStorageLocalDiskPartitionName=cucsStorageLocalDiskPartitionName, cucsStorageLocalDiskPartitionOrder=cucsStorageLocalDiskPartitionOrder, cucsStorageLocalDiskPartitionSize=cucsStorageLocalDiskPartitionSize, cucsStorageLocalDiskPartitionType=cucsStorageLocalDiskPartitionType, cucsStorageLocalDiskPartitionPolicyLevel=cucsStorageLocalDiskPartitionPolicyLevel, cucsStorageLocalDiskPartitionPolicyOwner=cucsStorageLocalDiskPartitionPolicyOwner, cucsStorageLocalLunTable=cucsStorageLocalLunTable, cucsStorageLocalLunEntry=cucsStorageLocalLunEntry, cucsStorageLocalLunInstanceId=cucsStorageLocalLunInstanceId, cucsStorageLocalLunDn=cucsStorageLocalLunDn, cucsStorageLocalLunRn=cucsStorageLocalLunRn, cucsStorageLocalLunBlockSize=cucsStorageLocalLunBlockSize, cucsStorageLocalLunConnectionProtocol=cucsStorageLocalLunConnectionProtocol, cucsStorageLocalLunId=cucsStorageLocalLunId, cucsStorageLocalLunModel=cucsStorageLocalLunModel)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageLocalLunNumberOfBlocks=cucsStorageLocalLunNumberOfBlocks, cucsStorageLocalLunOperability=cucsStorageLocalLunOperability, cucsStorageLocalLunPresence=cucsStorageLocalLunPresence, cucsStorageLocalLunRevision=cucsStorageLocalLunRevision, cucsStorageLocalLunSerial=cucsStorageLocalLunSerial, cucsStorageLocalLunSize=cucsStorageLocalLunSize, cucsStorageLocalLunType=cucsStorageLocalLunType, cucsStorageLocalLunVendor=cucsStorageLocalLunVendor, cucsStorageLocalLunLc=cucsStorageLocalLunLc, cucsStorageLocalLunOperQualifierReason=cucsStorageLocalLunOperQualifierReason, cucsStorageLunDiskTable=cucsStorageLunDiskTable, cucsStorageLunDiskEntry=cucsStorageLunDiskEntry, cucsStorageLunDiskInstanceId=cucsStorageLunDiskInstanceId, cucsStorageLunDiskDn=cucsStorageLunDiskDn, cucsStorageLunDiskRn=cucsStorageLunDiskRn, cucsStorageLunDiskId=cucsStorageLunDiskId, cucsStorageQualTable=cucsStorageQualTable, cucsStorageQualEntry=cucsStorageQualEntry, cucsStorageQualInstanceId=cucsStorageQualInstanceId, cucsStorageQualDn=cucsStorageQualDn, cucsStorageQualRn=cucsStorageQualRn, cucsStorageQualBlockSize=cucsStorageQualBlockSize, cucsStorageQualMaxCap=cucsStorageQualMaxCap, cucsStorageQualMinCap=cucsStorageQualMinCap, cucsStorageQualNumberOfBlocks=cucsStorageQualNumberOfBlocks, cucsStorageQualPerDiskCap=cucsStorageQualPerDiskCap, cucsStorageQualUnits=cucsStorageQualUnits, cucsStorageQualDiskless=cucsStorageQualDiskless, cucsStorageQualNumberOfFlexFlashCards=cucsStorageQualNumberOfFlexFlashCards, cucsStorageRaidBatteryTable=cucsStorageRaidBatteryTable, cucsStorageRaidBatteryEntry=cucsStorageRaidBatteryEntry, cucsStorageRaidBatteryInstanceId=cucsStorageRaidBatteryInstanceId, cucsStorageRaidBatteryDn=cucsStorageRaidBatteryDn, cucsStorageRaidBatteryRn=cucsStorageRaidBatteryRn, cucsStorageRaidBatteryBlockSize=cucsStorageRaidBatteryBlockSize, cucsStorageRaidBatteryConnectionProtocol=cucsStorageRaidBatteryConnectionProtocol, cucsStorageRaidBatteryId=cucsStorageRaidBatteryId, cucsStorageRaidBatteryModel=cucsStorageRaidBatteryModel, cucsStorageRaidBatteryNumberOfBlocks=cucsStorageRaidBatteryNumberOfBlocks, cucsStorageRaidBatteryOperability=cucsStorageRaidBatteryOperability, cucsStorageRaidBatteryPresence=cucsStorageRaidBatteryPresence, cucsStorageRaidBatteryRevision=cucsStorageRaidBatteryRevision, cucsStorageRaidBatterySerial=cucsStorageRaidBatterySerial, cucsStorageRaidBatterySize=cucsStorageRaidBatterySize, cucsStorageRaidBatteryVendor=cucsStorageRaidBatteryVendor, cucsStorageRaidBatteryOperQualifierReason=cucsStorageRaidBatteryOperQualifierReason, cucsStorageRaidBatteryBatteryType=cucsStorageRaidBatteryBatteryType, cucsStorageRaidBatteryCapacityPercentage=cucsStorageRaidBatteryCapacityPercentage, cucsStorageRaidBatteryOperabilityQualifier=cucsStorageRaidBatteryOperabilityQualifier, cucsStorageRaidBatteryOperabilityQualifierReason=cucsStorageRaidBatteryOperabilityQualifierReason, cucsStorageRaidBatteryTemperature=cucsStorageRaidBatteryTemperature, cucsStorageRaidBatteryBbuStatus=cucsStorageRaidBatteryBbuStatus, cucsStorageRaidBatteryLc=cucsStorageRaidBatteryLc, cucsStorageRaidBatteryLearnCycleRequested=cucsStorageRaidBatteryLearnCycleRequested, cucsStorageRaidBatteryLearnMode=cucsStorageRaidBatteryLearnMode, cucsStorageRaidBatteryNextLearnCycleTs=cucsStorageRaidBatteryNextLearnCycleTs, cucsStorageEnclosureTable=cucsStorageEnclosureTable, cucsStorageEnclosureEntry=cucsStorageEnclosureEntry, cucsStorageEnclosureInstanceId=cucsStorageEnclosureInstanceId, cucsStorageEnclosureDn=cucsStorageEnclosureDn, cucsStorageEnclosureRn=cucsStorageEnclosureRn, cucsStorageEnclosureId=cucsStorageEnclosureId, cucsStorageEnclosureModel=cucsStorageEnclosureModel, cucsStorageEnclosureNumSlots=cucsStorageEnclosureNumSlots, cucsStorageEnclosureRevision=cucsStorageEnclosureRevision, cucsStorageEnclosureSerial=cucsStorageEnclosureSerial, cucsStorageEnclosureVendor=cucsStorageEnclosureVendor, cucsStorageEnclosureLc=cucsStorageEnclosureLc, cucsStorageLocalDiskSlotEpTable=cucsStorageLocalDiskSlotEpTable, cucsStorageLocalDiskSlotEpEntry=cucsStorageLocalDiskSlotEpEntry, cucsStorageLocalDiskSlotEpInstanceId=cucsStorageLocalDiskSlotEpInstanceId, cucsStorageLocalDiskSlotEpDn=cucsStorageLocalDiskSlotEpDn, cucsStorageLocalDiskSlotEpRn=cucsStorageLocalDiskSlotEpRn, cucsStorageLocalDiskSlotEpConfiguration=cucsStorageLocalDiskSlotEpConfiguration, cucsStorageLocalDiskSlotEpId=cucsStorageLocalDiskSlotEpId, cucsStorageLocalDiskSlotEpOperability=cucsStorageLocalDiskSlotEpOperability, cucsStorageLocalDiskSlotEpPeerDn=cucsStorageLocalDiskSlotEpPeerDn, cucsStorageLocalDiskSlotEpPresence=cucsStorageLocalDiskSlotEpPresence, cucsStorageLocalDiskSlotEpOperQualifierReason=cucsStorageLocalDiskSlotEpOperQualifierReason, cucsStorageAuthKeyTable=cucsStorageAuthKeyTable, cucsStorageAuthKeyEntry=cucsStorageAuthKeyEntry, cucsStorageAuthKeyInstanceId=cucsStorageAuthKeyInstanceId, cucsStorageAuthKeyDn=cucsStorageAuthKeyDn, cucsStorageAuthKeyRn=cucsStorageAuthKeyRn, cucsStorageAuthKeyDescr=cucsStorageAuthKeyDescr, cucsStorageAuthKeyIntId=cucsStorageAuthKeyIntId, cucsStorageAuthKeyName=cucsStorageAuthKeyName, cucsStorageAuthKeyPassword=cucsStorageAuthKeyPassword, cucsStorageAuthKeyPolicyLevel=cucsStorageAuthKeyPolicyLevel, cucsStorageAuthKeyPolicyOwner=cucsStorageAuthKeyPolicyOwner, cucsStorageAuthKeyType=cucsStorageAuthKeyType, cucsStorageAuthKeyUserId=cucsStorageAuthKeyUserId, cucsStorageConnectionDefTable=cucsStorageConnectionDefTable, cucsStorageConnectionDefEntry=cucsStorageConnectionDefEntry, cucsStorageConnectionDefInstanceId=cucsStorageConnectionDefInstanceId, cucsStorageConnectionDefDn=cucsStorageConnectionDefDn, cucsStorageConnectionDefRn=cucsStorageConnectionDefRn, cucsStorageConnectionDefDescr=cucsStorageConnectionDefDescr, cucsStorageConnectionDefIntId=cucsStorageConnectionDefIntId, cucsStorageConnectionDefName=cucsStorageConnectionDefName, cucsStorageConnectionDefOperState=cucsStorageConnectionDefOperState, cucsStorageConnectionDefPolicyLevel=cucsStorageConnectionDefPolicyLevel, cucsStorageConnectionDefPolicyOwner=cucsStorageConnectionDefPolicyOwner, cucsStorageConnectionDefZoningType=cucsStorageConnectionDefZoningType, cucsStorageConnectionPolicyTable=cucsStorageConnectionPolicyTable, cucsStorageConnectionPolicyEntry=cucsStorageConnectionPolicyEntry, cucsStorageConnectionPolicyInstanceId=cucsStorageConnectionPolicyInstanceId, cucsStorageConnectionPolicyDn=cucsStorageConnectionPolicyDn, cucsStorageConnectionPolicyRn=cucsStorageConnectionPolicyRn, cucsStorageConnectionPolicyDescr=cucsStorageConnectionPolicyDescr, cucsStorageConnectionPolicyIntId=cucsStorageConnectionPolicyIntId, cucsStorageConnectionPolicyName=cucsStorageConnectionPolicyName, cucsStorageConnectionPolicyOperState=cucsStorageConnectionPolicyOperState, cucsStorageConnectionPolicyPolicyLevel=cucsStorageConnectionPolicyPolicyLevel, cucsStorageConnectionPolicyPolicyOwner=cucsStorageConnectionPolicyPolicyOwner, cucsStorageConnectionPolicyZoningType=cucsStorageConnectionPolicyZoningType, cucsStorageDomainEpTable=cucsStorageDomainEpTable, cucsStorageDomainEpEntry=cucsStorageDomainEpEntry, cucsStorageDomainEpInstanceId=cucsStorageDomainEpInstanceId, cucsStorageDomainEpDn=cucsStorageDomainEpDn, cucsStorageDomainEpRn=cucsStorageDomainEpRn, cucsStorageEpUserTable=cucsStorageEpUserTable, cucsStorageEpUserEntry=cucsStorageEpUserEntry, cucsStorageEpUserInstanceId=cucsStorageEpUserInstanceId, cucsStorageEpUserDn=cucsStorageEpUserDn, cucsStorageEpUserRn=cucsStorageEpUserRn, cucsStorageEpUserConfigState=cucsStorageEpUserConfigState)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageEpUserConfigStatusMessage=cucsStorageEpUserConfigStatusMessage, cucsStorageEpUserDescr=cucsStorageEpUserDescr, cucsStorageEpUserDomain=cucsStorageEpUserDomain, cucsStorageEpUserName=cucsStorageEpUserName, cucsStorageEpUserPriv=cucsStorageEpUserPriv, cucsStorageEpUserPwd=cucsStorageEpUserPwd, cucsStorageEpUserPwdSet=cucsStorageEpUserPwdSet, cucsStorageEtherIfTable=cucsStorageEtherIfTable, cucsStorageEtherIfEntry=cucsStorageEtherIfEntry, cucsStorageEtherIfInstanceId=cucsStorageEtherIfInstanceId, cucsStorageEtherIfDn=cucsStorageEtherIfDn, cucsStorageEtherIfRn=cucsStorageEtherIfRn, cucsStorageEtherIfName=cucsStorageEtherIfName, cucsStorageEtherIfVlanType=cucsStorageEtherIfVlanType, cucsStorageFcIfTable=cucsStorageFcIfTable, cucsStorageFcIfEntry=cucsStorageFcIfEntry, cucsStorageFcIfInstanceId=cucsStorageFcIfInstanceId, cucsStorageFcIfDn=cucsStorageFcIfDn, cucsStorageFcIfRn=cucsStorageFcIfRn, cucsStorageFcIfName=cucsStorageFcIfName, cucsStorageFcTargetEpTable=cucsStorageFcTargetEpTable, cucsStorageFcTargetEpEntry=cucsStorageFcTargetEpEntry, cucsStorageFcTargetEpInstanceId=cucsStorageFcTargetEpInstanceId, cucsStorageFcTargetEpDn=cucsStorageFcTargetEpDn, cucsStorageFcTargetEpRn=cucsStorageFcTargetEpRn, cucsStorageFcTargetEpDescr=cucsStorageFcTargetEpDescr, cucsStorageFcTargetEpPath=cucsStorageFcTargetEpPath, cucsStorageFcTargetEpTargetwwpn=cucsStorageFcTargetEpTargetwwpn, cucsStorageFcTargetIfTable=cucsStorageFcTargetIfTable, cucsStorageFcTargetIfEntry=cucsStorageFcTargetIfEntry, cucsStorageFcTargetIfInstanceId=cucsStorageFcTargetIfInstanceId, cucsStorageFcTargetIfDn=cucsStorageFcTargetIfDn, cucsStorageFcTargetIfRn=cucsStorageFcTargetIfRn, cucsStorageFcTargetIfId=cucsStorageFcTargetIfId, cucsStorageFcTargetIfProt=cucsStorageFcTargetIfProt, cucsStorageIScsiTargetIfTable=cucsStorageIScsiTargetIfTable, cucsStorageIScsiTargetIfEntry=cucsStorageIScsiTargetIfEntry, cucsStorageIScsiTargetIfInstanceId=cucsStorageIScsiTargetIfInstanceId, cucsStorageIScsiTargetIfDn=cucsStorageIScsiTargetIfDn, cucsStorageIScsiTargetIfRn=cucsStorageIScsiTargetIfRn, cucsStorageIScsiTargetIfName=cucsStorageIScsiTargetIfName, cucsStorageIScsiTargetIfProt=cucsStorageIScsiTargetIfProt, cucsStorageIniGroupTable=cucsStorageIniGroupTable, cucsStorageIniGroupEntry=cucsStorageIniGroupEntry, cucsStorageIniGroupInstanceId=cucsStorageIniGroupInstanceId, cucsStorageIniGroupDn=cucsStorageIniGroupDn, cucsStorageIniGroupRn=cucsStorageIniGroupRn, cucsStorageIniGroupDescr=cucsStorageIniGroupDescr, cucsStorageIniGroupGroupPolicyName=cucsStorageIniGroupGroupPolicyName, cucsStorageIniGroupIntId=cucsStorageIniGroupIntId, cucsStorageIniGroupName=cucsStorageIniGroupName, cucsStorageIniGroupOperProtocol=cucsStorageIniGroupOperProtocol, cucsStorageIniGroupOwner=cucsStorageIniGroupOwner, cucsStorageIniGroupPolicyLevel=cucsStorageIniGroupPolicyLevel, cucsStorageIniGroupPolicyName=cucsStorageIniGroupPolicyName, cucsStorageIniGroupPolicyOwner=cucsStorageIniGroupPolicyOwner, cucsStorageIniGroupProtocol=cucsStorageIniGroupProtocol, cucsStorageIniGroupRmtDiskCfgName=cucsStorageIniGroupRmtDiskCfgName, cucsStorageIniGroupOperState=cucsStorageIniGroupOperState, cucsStorageInitiatorTable=cucsStorageInitiatorTable, cucsStorageInitiatorEntry=cucsStorageInitiatorEntry, cucsStorageInitiatorInstanceId=cucsStorageInitiatorInstanceId, cucsStorageInitiatorDn=cucsStorageInitiatorDn, cucsStorageInitiatorRn=cucsStorageInitiatorRn, cucsStorageInitiatorDescr=cucsStorageInitiatorDescr, cucsStorageInitiatorIntId=cucsStorageInitiatorIntId, cucsStorageInitiatorName=cucsStorageInitiatorName, cucsStorageInitiatorOperState=cucsStorageInitiatorOperState, cucsStorageInitiatorPolicyLevel=cucsStorageInitiatorPolicyLevel, cucsStorageInitiatorPolicyOwner=cucsStorageInitiatorPolicyOwner, cucsStorageInitiatorDuplicateTarget=cucsStorageInitiatorDuplicateTarget, cucsStorageNodeEpTable=cucsStorageNodeEpTable, cucsStorageNodeEpEntry=cucsStorageNodeEpEntry, cucsStorageNodeEpInstanceId=cucsStorageNodeEpInstanceId, cucsStorageNodeEpDn=cucsStorageNodeEpDn, cucsStorageNodeEpRn=cucsStorageNodeEpRn, cucsStorageNodeEpEpDn=cucsStorageNodeEpEpDn, cucsStorageNodeEpId=cucsStorageNodeEpId, cucsStorageSystemTable=cucsStorageSystemTable, cucsStorageSystemEntry=cucsStorageSystemEntry, cucsStorageSystemInstanceId=cucsStorageSystemInstanceId, cucsStorageSystemDn=cucsStorageSystemDn, cucsStorageSystemRn=cucsStorageSystemRn, cucsStorageSystemFsmPrev=cucsStorageSystemFsmPrev, cucsStorageSystemFsmProgr=cucsStorageSystemFsmProgr, cucsStorageSystemFsmRmtInvErrCode=cucsStorageSystemFsmRmtInvErrCode, cucsStorageSystemFsmRmtInvErrDescr=cucsStorageSystemFsmRmtInvErrDescr, cucsStorageSystemFsmRmtInvRslt=cucsStorageSystemFsmRmtInvRslt, cucsStorageSystemFsmStamp=cucsStorageSystemFsmStamp, cucsStorageSystemFsmStatus=cucsStorageSystemFsmStatus, cucsStorageSystemFsmTry=cucsStorageSystemFsmTry, cucsStorageSystemId=cucsStorageSystemId, cucsStorageSystemName=cucsStorageSystemName, cucsStorageSystemFsmTable=cucsStorageSystemFsmTable, cucsStorageSystemFsmEntry=cucsStorageSystemFsmEntry, cucsStorageSystemFsmInstanceId=cucsStorageSystemFsmInstanceId, cucsStorageSystemFsmDn=cucsStorageSystemFsmDn, cucsStorageSystemFsmRn=cucsStorageSystemFsmRn, cucsStorageSystemFsmCompletionTime=cucsStorageSystemFsmCompletionTime, cucsStorageSystemFsmCurrentFsm=cucsStorageSystemFsmCurrentFsm, cucsStorageSystemFsmDescr=cucsStorageSystemFsmDescr, cucsStorageSystemFsmFsmStatus=cucsStorageSystemFsmFsmStatus, cucsStorageSystemFsmProgress=cucsStorageSystemFsmProgress, cucsStorageSystemFsmRmtErrCode=cucsStorageSystemFsmRmtErrCode, cucsStorageSystemFsmRmtErrDescr=cucsStorageSystemFsmRmtErrDescr, cucsStorageSystemFsmRmtRslt=cucsStorageSystemFsmRmtRslt, cucsStorageSystemFsmStageTable=cucsStorageSystemFsmStageTable, cucsStorageSystemFsmStageEntry=cucsStorageSystemFsmStageEntry, cucsStorageSystemFsmStageInstanceId=cucsStorageSystemFsmStageInstanceId, cucsStorageSystemFsmStageDn=cucsStorageSystemFsmStageDn, cucsStorageSystemFsmStageRn=cucsStorageSystemFsmStageRn, cucsStorageSystemFsmStageDescr=cucsStorageSystemFsmStageDescr, cucsStorageSystemFsmStageLastUpdateTime=cucsStorageSystemFsmStageLastUpdateTime, cucsStorageSystemFsmStageName=cucsStorageSystemFsmStageName, cucsStorageSystemFsmStageOrder=cucsStorageSystemFsmStageOrder, cucsStorageSystemFsmStageRetry=cucsStorageSystemFsmStageRetry, cucsStorageSystemFsmStageStageStatus=cucsStorageSystemFsmStageStageStatus, cucsStorageSystemFsmTaskTable=cucsStorageSystemFsmTaskTable, cucsStorageSystemFsmTaskEntry=cucsStorageSystemFsmTaskEntry, cucsStorageSystemFsmTaskInstanceId=cucsStorageSystemFsmTaskInstanceId, cucsStorageSystemFsmTaskDn=cucsStorageSystemFsmTaskDn, cucsStorageSystemFsmTaskRn=cucsStorageSystemFsmTaskRn, cucsStorageSystemFsmTaskCompletion=cucsStorageSystemFsmTaskCompletion, cucsStorageSystemFsmTaskFlags=cucsStorageSystemFsmTaskFlags, cucsStorageSystemFsmTaskItem=cucsStorageSystemFsmTaskItem, cucsStorageSystemFsmTaskSeqId=cucsStorageSystemFsmTaskSeqId, cucsStorageVirtualDriveTable=cucsStorageVirtualDriveTable)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageVirtualDriveEntry=cucsStorageVirtualDriveEntry, cucsStorageVirtualDriveInstanceId=cucsStorageVirtualDriveInstanceId, cucsStorageVirtualDriveDn=cucsStorageVirtualDriveDn, cucsStorageVirtualDriveRn=cucsStorageVirtualDriveRn, cucsStorageVirtualDriveBlockSize=cucsStorageVirtualDriveBlockSize, cucsStorageVirtualDriveConnectionProtocol=cucsStorageVirtualDriveConnectionProtocol, cucsStorageVirtualDriveId=cucsStorageVirtualDriveId, cucsStorageVirtualDriveModel=cucsStorageVirtualDriveModel, cucsStorageVirtualDriveNumberOfBlocks=cucsStorageVirtualDriveNumberOfBlocks, cucsStorageVirtualDriveOperQualifierReason=cucsStorageVirtualDriveOperQualifierReason, cucsStorageVirtualDriveOperability=cucsStorageVirtualDriveOperability, cucsStorageVirtualDrivePresence=cucsStorageVirtualDrivePresence, cucsStorageVirtualDriveRevision=cucsStorageVirtualDriveRevision, cucsStorageVirtualDriveSerial=cucsStorageVirtualDriveSerial, cucsStorageVirtualDriveSize=cucsStorageVirtualDriveSize, cucsStorageVirtualDriveType=cucsStorageVirtualDriveType, cucsStorageVirtualDriveVendor=cucsStorageVirtualDriveVendor, cucsStorageVirtualDriveAccessPolicy=cucsStorageVirtualDriveAccessPolicy, cucsStorageVirtualDriveActualWriteCachePolicy=cucsStorageVirtualDriveActualWriteCachePolicy, cucsStorageVirtualDriveBootable=cucsStorageVirtualDriveBootable, cucsStorageVirtualDriveConfiguredWriteCachePolicy=cucsStorageVirtualDriveConfiguredWriteCachePolicy, cucsStorageVirtualDriveDriveCache=cucsStorageVirtualDriveDriveCache, cucsStorageVirtualDriveDriveState=cucsStorageVirtualDriveDriveState, cucsStorageVirtualDriveIoPolicy=cucsStorageVirtualDriveIoPolicy, cucsStorageVirtualDriveLc=cucsStorageVirtualDriveLc, cucsStorageVirtualDriveReadPolicy=cucsStorageVirtualDriveReadPolicy, cucsStorageVirtualDriveStripSize=cucsStorageVirtualDriveStripSize, cucsStorageVsanRefTable=cucsStorageVsanRefTable, cucsStorageVsanRefEntry=cucsStorageVsanRefEntry, cucsStorageVsanRefInstanceId=cucsStorageVsanRefInstanceId, cucsStorageVsanRefDn=cucsStorageVsanRefDn, cucsStorageVsanRefRn=cucsStorageVsanRefRn, cucsStorageVsanRefConfigQualifier=cucsStorageVsanRefConfigQualifier, cucsStorageVsanRefName=cucsStorageVsanRefName, cucsStorageVsanRefOperVnetDn=cucsStorageVsanRefOperVnetDn, cucsStorageVsanRefOperVnetName=cucsStorageVsanRefOperVnetName, cucsStorageVsanRefSwitchId=cucsStorageVsanRefSwitchId, cucsStorageVsanRefVnet=cucsStorageVsanRefVnet, cucsStorageVsanRefZoningState=cucsStorageVsanRefZoningState, cucsStorageTransportableFlashModuleTable=cucsStorageTransportableFlashModuleTable, cucsStorageTransportableFlashModuleEntry=cucsStorageTransportableFlashModuleEntry, cucsStorageTransportableFlashModuleInstanceId=cucsStorageTransportableFlashModuleInstanceId, cucsStorageTransportableFlashModuleDn=cucsStorageTransportableFlashModuleDn, cucsStorageTransportableFlashModuleRn=cucsStorageTransportableFlashModuleRn, cucsStorageTransportableFlashModuleBlockSize=cucsStorageTransportableFlashModuleBlockSize, cucsStorageTransportableFlashModuleConnectionProtocol=cucsStorageTransportableFlashModuleConnectionProtocol, cucsStorageTransportableFlashModuleId=cucsStorageTransportableFlashModuleId, cucsStorageTransportableFlashModuleModel=cucsStorageTransportableFlashModuleModel, cucsStorageTransportableFlashModuleNumberOfBlocks=cucsStorageTransportableFlashModuleNumberOfBlocks, cucsStorageTransportableFlashModuleOperQualifierReason=cucsStorageTransportableFlashModuleOperQualifierReason, cucsStorageTransportableFlashModuleOperability=cucsStorageTransportableFlashModuleOperability, cucsStorageTransportableFlashModulePresence=cucsStorageTransportableFlashModulePresence, cucsStorageTransportableFlashModuleRevision=cucsStorageTransportableFlashModuleRevision, cucsStorageTransportableFlashModuleSerial=cucsStorageTransportableFlashModuleSerial, cucsStorageTransportableFlashModuleSize=cucsStorageTransportableFlashModuleSize, cucsStorageTransportableFlashModuleVendor=cucsStorageTransportableFlashModuleVendor, cucsStorageFlexFlashCardTable=cucsStorageFlexFlashCardTable, cucsStorageFlexFlashCardEntry=cucsStorageFlexFlashCardEntry, cucsStorageFlexFlashCardInstanceId=cucsStorageFlexFlashCardInstanceId, cucsStorageFlexFlashCardDn=cucsStorageFlexFlashCardDn, cucsStorageFlexFlashCardRn=cucsStorageFlexFlashCardRn, cucsStorageFlexFlashCardBlockSize=cucsStorageFlexFlashCardBlockSize, cucsStorageFlexFlashCardCardHealth=cucsStorageFlexFlashCardCardHealth, cucsStorageFlexFlashCardCardMode=cucsStorageFlexFlashCardCardMode, cucsStorageFlexFlashCardCardType=cucsStorageFlexFlashCardCardType, cucsStorageFlexFlashCardConnectionProtocol=cucsStorageFlexFlashCardConnectionProtocol, cucsStorageFlexFlashCardControllerIndex=cucsStorageFlexFlashCardControllerIndex, cucsStorageFlexFlashCardId=cucsStorageFlexFlashCardId, cucsStorageFlexFlashCardMfgDate=cucsStorageFlexFlashCardMfgDate, cucsStorageFlexFlashCardMfgId=cucsStorageFlexFlashCardMfgId, cucsStorageFlexFlashCardModel=cucsStorageFlexFlashCardModel, cucsStorageFlexFlashCardNumberOfBlocks=cucsStorageFlexFlashCardNumberOfBlocks, cucsStorageFlexFlashCardOemId=cucsStorageFlexFlashCardOemId, cucsStorageFlexFlashCardOperQualifierReason=cucsStorageFlexFlashCardOperQualifierReason, cucsStorageFlexFlashCardOperability=cucsStorageFlexFlashCardOperability, cucsStorageFlexFlashCardPresence=cucsStorageFlexFlashCardPresence, cucsStorageFlexFlashCardReadIOErrorCount=cucsStorageFlexFlashCardReadIOErrorCount, cucsStorageFlexFlashCardRevision=cucsStorageFlexFlashCardRevision, cucsStorageFlexFlashCardSerial=cucsStorageFlexFlashCardSerial, cucsStorageFlexFlashCardSize=cucsStorageFlexFlashCardSize, cucsStorageFlexFlashCardSlotNumber=cucsStorageFlexFlashCardSlotNumber, cucsStorageFlexFlashCardVendor=cucsStorageFlexFlashCardVendor, cucsStorageFlexFlashCardWriteEnable=cucsStorageFlexFlashCardWriteEnable, cucsStorageFlexFlashCardWriteIOErrorCount=cucsStorageFlexFlashCardWriteIOErrorCount, cucsStorageFlexFlashCardCardState=cucsStorageFlexFlashCardCardState, cucsStorageFlexFlashCardCardSync=cucsStorageFlexFlashCardCardSync, cucsStorageFlexFlashCardDrivesEnabled=cucsStorageFlexFlashCardDrivesEnabled, cucsStorageFlexFlashCardPartitionCount=cucsStorageFlexFlashCardPartitionCount, cucsStorageFlexFlashCardReadErrorThreshold=cucsStorageFlexFlashCardReadErrorThreshold, cucsStorageFlexFlashCardSignature=cucsStorageFlexFlashCardSignature, cucsStorageFlexFlashCardWriteErrorThreshold=cucsStorageFlexFlashCardWriteErrorThreshold, cucsStorageFlexFlashControllerTable=cucsStorageFlexFlashControllerTable, cucsStorageFlexFlashControllerEntry=cucsStorageFlexFlashControllerEntry, cucsStorageFlexFlashControllerInstanceId=cucsStorageFlexFlashControllerInstanceId, cucsStorageFlexFlashControllerDn=cucsStorageFlexFlashControllerDn, cucsStorageFlexFlashControllerRn=cucsStorageFlexFlashControllerRn, cucsStorageFlexFlashControllerControllerHealth=cucsStorageFlexFlashControllerControllerHealth, cucsStorageFlexFlashControllerControllerState=cucsStorageFlexFlashControllerControllerState, cucsStorageFlexFlashControllerFlexFlashType=cucsStorageFlexFlashControllerFlexFlashType, cucsStorageFlexFlashControllerId=cucsStorageFlexFlashControllerId, cucsStorageFlexFlashControllerModel=cucsStorageFlexFlashControllerModel, cucsStorageFlexFlashControllerOperQualifierReason=cucsStorageFlexFlashControllerOperQualifierReason, cucsStorageFlexFlashControllerOperState=cucsStorageFlexFlashControllerOperState, cucsStorageFlexFlashControllerOperability=cucsStorageFlexFlashControllerOperability, cucsStorageFlexFlashControllerPciAddr=cucsStorageFlexFlashControllerPciAddr, cucsStorageFlexFlashControllerPciSlot=cucsStorageFlexFlashControllerPciSlot, cucsStorageFlexFlashControllerPerf=cucsStorageFlexFlashControllerPerf, cucsStorageFlexFlashControllerPhysicalDriveCount=cucsStorageFlexFlashControllerPhysicalDriveCount, cucsStorageFlexFlashControllerPower=cucsStorageFlexFlashControllerPower, cucsStorageFlexFlashControllerPresence=cucsStorageFlexFlashControllerPresence, cucsStorageFlexFlashControllerPrimarySlotNumber=cucsStorageFlexFlashControllerPrimarySlotNumber, cucsStorageFlexFlashControllerRaidSyncSupport=cucsStorageFlexFlashControllerRaidSyncSupport, cucsStorageFlexFlashControllerReadErrorThreshold=cucsStorageFlexFlashControllerReadErrorThreshold, cucsStorageFlexFlashControllerRevision=cucsStorageFlexFlashControllerRevision, cucsStorageFlexFlashControllerSerial=cucsStorageFlexFlashControllerSerial, cucsStorageFlexFlashControllerThermal=cucsStorageFlexFlashControllerThermal, cucsStorageFlexFlashControllerType=cucsStorageFlexFlashControllerType, cucsStorageFlexFlashControllerVendor=cucsStorageFlexFlashControllerVendor, cucsStorageFlexFlashControllerVirtualDriveCount=cucsStorageFlexFlashControllerVirtualDriveCount, cucsStorageFlexFlashControllerVoltage=cucsStorageFlexFlashControllerVoltage, cucsStorageFlexFlashControllerWriteErrorThreshold=cucsStorageFlexFlashControllerWriteErrorThreshold, cucsStorageFlexFlashControllerAdminSlotNumber=cucsStorageFlexFlashControllerAdminSlotNumber, cucsStorageFlexFlashControllerConfiguredMode=cucsStorageFlexFlashControllerConfiguredMode, cucsStorageFlexFlashControllerFirmwareVersion=cucsStorageFlexFlashControllerFirmwareVersion, cucsStorageFlexFlashControllerFsmFlags=cucsStorageFlexFlashControllerFsmFlags, cucsStorageFlexFlashControllerFsmPrev=cucsStorageFlexFlashControllerFsmPrev, cucsStorageFlexFlashControllerFsmProgr=cucsStorageFlexFlashControllerFsmProgr)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageFlexFlashControllerFsmRmtInvErrCode=cucsStorageFlexFlashControllerFsmRmtInvErrCode, cucsStorageFlexFlashControllerFsmRmtInvErrDescr=cucsStorageFlexFlashControllerFsmRmtInvErrDescr, cucsStorageFlexFlashControllerFsmRmtInvRslt=cucsStorageFlexFlashControllerFsmRmtInvRslt, cucsStorageFlexFlashControllerFsmStamp=cucsStorageFlexFlashControllerFsmStamp, cucsStorageFlexFlashControllerFsmStatus=cucsStorageFlexFlashControllerFsmStatus, cucsStorageFlexFlashControllerFsmTry=cucsStorageFlexFlashControllerFsmTry, cucsStorageFlexFlashControllerHasError=cucsStorageFlexFlashControllerHasError, cucsStorageFlexFlashControllerLocationDn=cucsStorageFlexFlashControllerLocationDn, cucsStorageFlexFlashControllerOperatingMode=cucsStorageFlexFlashControllerOperatingMode, cucsStorageFlexFlashControllerOperationRequest=cucsStorageFlexFlashControllerOperationRequest, cucsStorageFlexFlashDriveTable=cucsStorageFlexFlashDriveTable, cucsStorageFlexFlashDriveEntry=cucsStorageFlexFlashDriveEntry, cucsStorageFlexFlashDriveInstanceId=cucsStorageFlexFlashDriveInstanceId, cucsStorageFlexFlashDriveDn=cucsStorageFlexFlashDriveDn, cucsStorageFlexFlashDriveRn=cucsStorageFlexFlashDriveRn, cucsStorageFlexFlashDriveBlockSize=cucsStorageFlexFlashDriveBlockSize, cucsStorageFlexFlashDriveConnectionProtocol=cucsStorageFlexFlashDriveConnectionProtocol, cucsStorageFlexFlashDriveControllerIndex=cucsStorageFlexFlashDriveControllerIndex, cucsStorageFlexFlashDriveDriveState=cucsStorageFlexFlashDriveDriveState, cucsStorageFlexFlashDriveDriveType=cucsStorageFlexFlashDriveDriveType, cucsStorageFlexFlashDriveId=cucsStorageFlexFlashDriveId, cucsStorageFlexFlashDriveModel=cucsStorageFlexFlashDriveModel, cucsStorageFlexFlashDriveName=cucsStorageFlexFlashDriveName, cucsStorageFlexFlashDriveNumberOfBlocks=cucsStorageFlexFlashDriveNumberOfBlocks, cucsStorageFlexFlashDriveOperQualifierReason=cucsStorageFlexFlashDriveOperQualifierReason, cucsStorageFlexFlashDriveOperability=cucsStorageFlexFlashDriveOperability, cucsStorageFlexFlashDrivePresence=cucsStorageFlexFlashDrivePresence, cucsStorageFlexFlashDriveRevision=cucsStorageFlexFlashDriveRevision, cucsStorageFlexFlashDriveSerial=cucsStorageFlexFlashDriveSerial, cucsStorageFlexFlashDriveSize=cucsStorageFlexFlashDriveSize, cucsStorageFlexFlashDriveSlotNumber=cucsStorageFlexFlashDriveSlotNumber, cucsStorageFlexFlashDriveVendor=cucsStorageFlexFlashDriveVendor, cucsStorageFlexFlashDriveVisible=cucsStorageFlexFlashDriveVisible, cucsStorageFlexFlashDriveRemovable=cucsStorageFlexFlashDriveRemovable, cucsStorageFlexFlashDriveRWType=cucsStorageFlexFlashDriveRWType, cucsStorageFlexFlashDriveLastOperation=cucsStorageFlexFlashDriveLastOperation, cucsStorageFlexFlashDriveOperationState=cucsStorageFlexFlashDriveOperationState, cucsStorageFlexFlashVirtualDriveTable=cucsStorageFlexFlashVirtualDriveTable, cucsStorageFlexFlashVirtualDriveEntry=cucsStorageFlexFlashVirtualDriveEntry, cucsStorageFlexFlashVirtualDriveInstanceId=cucsStorageFlexFlashVirtualDriveInstanceId, cucsStorageFlexFlashVirtualDriveDn=cucsStorageFlexFlashVirtualDriveDn, cucsStorageFlexFlashVirtualDriveRn=cucsStorageFlexFlashVirtualDriveRn, cucsStorageFlexFlashVirtualDriveBlockSize=cucsStorageFlexFlashVirtualDriveBlockSize, cucsStorageFlexFlashVirtualDriveConnectionProtocol=cucsStorageFlexFlashVirtualDriveConnectionProtocol, cucsStorageFlexFlashVirtualDriveId=cucsStorageFlexFlashVirtualDriveId, cucsStorageFlexFlashVirtualDriveModel=cucsStorageFlexFlashVirtualDriveModel, cucsStorageFlexFlashVirtualDriveNumberOfBlocks=cucsStorageFlexFlashVirtualDriveNumberOfBlocks, cucsStorageFlexFlashVirtualDriveOperQualifierReason=cucsStorageFlexFlashVirtualDriveOperQualifierReason, cucsStorageFlexFlashVirtualDriveOperability=cucsStorageFlexFlashVirtualDriveOperability, cucsStorageFlexFlashVirtualDrivePresence=cucsStorageFlexFlashVirtualDrivePresence, cucsStorageFlexFlashVirtualDriveRaidHealth=cucsStorageFlexFlashVirtualDriveRaidHealth, cucsStorageFlexFlashVirtualDriveRaidState=cucsStorageFlexFlashVirtualDriveRaidState, cucsStorageFlexFlashVirtualDriveRevision=cucsStorageFlexFlashVirtualDriveRevision, cucsStorageFlexFlashVirtualDriveSerial=cucsStorageFlexFlashVirtualDriveSerial, cucsStorageFlexFlashVirtualDriveSize=cucsStorageFlexFlashVirtualDriveSize, cucsStorageFlexFlashVirtualDriveType=cucsStorageFlexFlashVirtualDriveType, cucsStorageFlexFlashVirtualDriveVendor=cucsStorageFlexFlashVirtualDriveVendor, cucsStorageOperationTable=cucsStorageOperationTable, cucsStorageOperationEntry=cucsStorageOperationEntry, cucsStorageOperationInstanceId=cucsStorageOperationInstanceId, cucsStorageOperationDn=cucsStorageOperationDn, cucsStorageOperationRn=cucsStorageOperationRn, cucsStorageOperationEndTime=cucsStorageOperationEndTime, cucsStorageOperationName=cucsStorageOperationName, cucsStorageOperationOperState=cucsStorageOperationOperState, cucsStorageOperationProgress=cucsStorageOperationProgress, cucsStorageOperationStartTime=cucsStorageOperationStartTime, cucsStorageOperationStatusDescr=cucsStorageOperationStatusDescr, cucsStorageFlexFlashControllerFsmTable=cucsStorageFlexFlashControllerFsmTable, cucsStorageFlexFlashControllerFsmEntry=cucsStorageFlexFlashControllerFsmEntry, cucsStorageFlexFlashControllerFsmInstanceId=cucsStorageFlexFlashControllerFsmInstanceId, cucsStorageFlexFlashControllerFsmDn=cucsStorageFlexFlashControllerFsmDn, cucsStorageFlexFlashControllerFsmRn=cucsStorageFlexFlashControllerFsmRn, cucsStorageFlexFlashControllerFsmCompletionTime=cucsStorageFlexFlashControllerFsmCompletionTime, cucsStorageFlexFlashControllerFsmCurrentFsm=cucsStorageFlexFlashControllerFsmCurrentFsm, cucsStorageFlexFlashControllerFsmDescr=cucsStorageFlexFlashControllerFsmDescr, cucsStorageFlexFlashControllerFsmFsmStatus=cucsStorageFlexFlashControllerFsmFsmStatus, cucsStorageFlexFlashControllerFsmProgress=cucsStorageFlexFlashControllerFsmProgress, cucsStorageFlexFlashControllerFsmRmtErrCode=cucsStorageFlexFlashControllerFsmRmtErrCode, cucsStorageFlexFlashControllerFsmRmtErrDescr=cucsStorageFlexFlashControllerFsmRmtErrDescr, cucsStorageFlexFlashControllerFsmRmtRslt=cucsStorageFlexFlashControllerFsmRmtRslt, cucsStorageFlexFlashControllerFsmStageTable=cucsStorageFlexFlashControllerFsmStageTable, cucsStorageFlexFlashControllerFsmStageEntry=cucsStorageFlexFlashControllerFsmStageEntry, cucsStorageFlexFlashControllerFsmStageInstanceId=cucsStorageFlexFlashControllerFsmStageInstanceId, cucsStorageFlexFlashControllerFsmStageDn=cucsStorageFlexFlashControllerFsmStageDn, cucsStorageFlexFlashControllerFsmStageRn=cucsStorageFlexFlashControllerFsmStageRn, cucsStorageFlexFlashControllerFsmStageDescr=cucsStorageFlexFlashControllerFsmStageDescr, cucsStorageFlexFlashControllerFsmStageLastUpdateTime=cucsStorageFlexFlashControllerFsmStageLastUpdateTime, cucsStorageFlexFlashControllerFsmStageName=cucsStorageFlexFlashControllerFsmStageName, cucsStorageFlexFlashControllerFsmStageOrder=cucsStorageFlexFlashControllerFsmStageOrder, cucsStorageFlexFlashControllerFsmStageRetry=cucsStorageFlexFlashControllerFsmStageRetry, cucsStorageFlexFlashControllerFsmStageStageStatus=cucsStorageFlexFlashControllerFsmStageStageStatus, cucsStorageFlexFlashControllerFsmTaskTable=cucsStorageFlexFlashControllerFsmTaskTable, cucsStorageFlexFlashControllerFsmTaskEntry=cucsStorageFlexFlashControllerFsmTaskEntry, cucsStorageFlexFlashControllerFsmTaskInstanceId=cucsStorageFlexFlashControllerFsmTaskInstanceId, cucsStorageFlexFlashControllerFsmTaskDn=cucsStorageFlexFlashControllerFsmTaskDn, cucsStorageFlexFlashControllerFsmTaskRn=cucsStorageFlexFlashControllerFsmTaskRn, cucsStorageFlexFlashControllerFsmTaskCompletion=cucsStorageFlexFlashControllerFsmTaskCompletion, cucsStorageFlexFlashControllerFsmTaskFlags=cucsStorageFlexFlashControllerFsmTaskFlags, cucsStorageFlexFlashControllerFsmTaskItem=cucsStorageFlexFlashControllerFsmTaskItem, cucsStorageFlexFlashControllerFsmTaskSeqId=cucsStorageFlexFlashControllerFsmTaskSeqId, cucsStorageMezzFlashLifeTable=cucsStorageMezzFlashLifeTable, cucsStorageMezzFlashLifeEntry=cucsStorageMezzFlashLifeEntry, cucsStorageMezzFlashLifeInstanceId=cucsStorageMezzFlashLifeInstanceId, cucsStorageMezzFlashLifeDn=cucsStorageMezzFlashLifeDn, cucsStorageMezzFlashLifeRn=cucsStorageMezzFlashLifeRn, cucsStorageMezzFlashLifeBlockSize=cucsStorageMezzFlashLifeBlockSize, cucsStorageMezzFlashLifeConnectionProtocol=cucsStorageMezzFlashLifeConnectionProtocol, cucsStorageMezzFlashLifeFlashPercentage=cucsStorageMezzFlashLifeFlashPercentage, cucsStorageMezzFlashLifeFlashStatus=cucsStorageMezzFlashLifeFlashStatus, cucsStorageMezzFlashLifeId=cucsStorageMezzFlashLifeId, cucsStorageMezzFlashLifeModel=cucsStorageMezzFlashLifeModel, cucsStorageMezzFlashLifeNumberOfBlocks=cucsStorageMezzFlashLifeNumberOfBlocks, cucsStorageMezzFlashLifeOperQualifierReason=cucsStorageMezzFlashLifeOperQualifierReason, cucsStorageMezzFlashLifeOperability=cucsStorageMezzFlashLifeOperability, cucsStorageMezzFlashLifePresence=cucsStorageMezzFlashLifePresence, cucsStorageMezzFlashLifeRevision=cucsStorageMezzFlashLifeRevision, cucsStorageMezzFlashLifeSerial=cucsStorageMezzFlashLifeSerial, cucsStorageMezzFlashLifeSize=cucsStorageMezzFlashLifeSize, cucsStorageMezzFlashLifeVendor=cucsStorageMezzFlashLifeVendor)

